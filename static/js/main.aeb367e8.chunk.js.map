{"version":3,"sources":["js/common/Lodding.js","js/login/Login.js","js/common/utils.js","js/common/Top.js","js/common/Footer.js","js/common/TopMenu.js","js/match/StatIcon.js","js/match/UpComing.js","js/match/MatchLive.js","js/match/MatchHistory.js","js/match/Match.js","js/contest/ContestInfo.js","js/contest/ContestList.js","js/modal/Modal.js","js/contest/Contest.js","js/Main.js","js/common/SubTitle.js","js/setting/SettingTop.js","js/setting/mlb/SelectTeam.js","js/setting/mlb/SelectTeamTab.js","js/setting/components/common/pagination.jsx","js/setting/mlb/MlbtableHeader.js","js/setting/mlb/MlbtableBody.js","js/setting/mlb/Mlbtable.js","js/setting/components/common/like.jsx","js/setting/mlb/PlayerTable.js","js/setting/mlb/SelectPlayer.js","js/setting/components/common/listGroup.jsx","js/setting/services/movieService.js","js/setting/services/genreService.js","js/setting/components/common/tableHeader.jsx","js/setting/components/common/tableBody.jsx","js/setting/components/common/table.jsx","js/setting/components/moviesTable.jsx","js/setting/mlb/Condition.js","js/setting/components/movies.jsx","js/setting/Grid.js","js/setting/Setting.js","Layout.js","index.js"],"names":["Lodding","className","Login","state","isLoading","username","password","_dbTest","a","event","this","type","name","placeholder","id","href","onClick","handleClick","React","Component","DATA_URL","getAbbr","gameType","getGame","getMenu","getContestType","contestType","groupBy","array","key","reduce","result","currentValue","numberDate","Date","st","toLocaleDateString","split","yearDate","splice","groupDate","join","push","Top","to","pathname","Footer","LegacyComponentClass","props","t","gametype","MyComponent","withTranslation","TopMenu","topmenu","contest","getTopMenu","axios","get","utils","data","setState","submenu","tabActive","tabSubActive","local_gametype","localStorage","getItem","setItem","undefined","onChange","onoff","getTopMenuClick","map","topmenulist","index","game_type","display","web_pro_display_yn","order","web_pro_order","fallback","getTopSubMenuClick","Staticon","UpComing","gi","gameid","gt","homeabbr","hta","awayabbr","ata","hometeam","htn","awayteam","atn","gp","cc","ln","hs","as","getContestClick","format","date","renderer","days","zeroPad","hours","minutes","seconds","toLocaleString","MatchLive","gs","hsc","asc","my","myec","MatchHistory","tp","tw","hWin","AWin","lns","indexOf","Match","matchs","match","getMatch","matchslistMLB","matchslistKBO","matchsMLB","matchsKBO","matchslist","getMatchChange","getChildContest","prevProps","Object","keys","length","getOwnPropertyNames","reverse","ContestInfo","ContestList","gameId","featured","f","ct","users","u","userMax","um","percent","Math","ceil","totalPrize","fee","fe","topValue","tv","getContestModalClick","style","width","Modal","isOpen","close","Fragment","transitionName","transitionEnterTimeout","transitionLeaveTimeout","Contest","contestlist","count","isModalOpen","getContest","main","list","openModal","closeModal","userContestCnt","Number","conlist","Main","getParentsTopMenu","getParentsContest","SubTitle","subTitle","SettingTop","prop","SelectTeam","hpn","apn","hps","aps","hpe","round","ape","homeAway","teamStat","team_id","ati","apitw","p_win","aloss","p_lose","adraw","h_d","apitSv","p_save","apitEra","p_era","hpitw","hloss","hdraw","hpitSv","hpitEra","data-event","data-tip","globalEventOff","place","effect","selectTeam","data-id","SelectTeamTab","items","textProperty","valueProperty","onItemSelect","selectedItem","tabColor","item","defaultProps","Pagination","itemsCount","pageSize","currentPage","onPageChange","pageCount","pages","_","range","page","TableHeader","raiseSort","path","sortColumn","onSort","renderSortIcon","column","icon","faCaretDown","faCaretUp","columns","class","label","TableBody","renderCell","content","createKey","_id","smoothScrolling","horizontal","po","selectPlayer","Table","getSelectPlayer","Like","classes","liked","cursor","aria-hidden","PlayerTable","movie","nm","onLike","pir","onDelete","selectPlayerData","movies","SelectPlayer","genres","handleDelete","handleLike","console","log","handlePageChange","handleGenreSelect","genre","selectedGenre","handleSort","getPagedData","allMovies","filtered","filter","m","ti","sorted","orderBy","slice","sort","b","nu","localeCompare","numeric","totalCount","away","home","hti","pl","ListGroup","title","release","MoviesTable","Condition","playerlist","settinginfo","getTeamStat","year","getFullYear","nowYear","String","statlist","season_year","opponent_team_id","Grid","contestId","celllist","getCellList","cellActive","homeaway","cell","selectCell","co","Setting","params","getContestInfor","setTopData","location","JSON","parse","stringify","Layout","exact","component","i18next","init","interpolation","escapeValue","lng","resources","en","common","common_en","ko","common_ko","ReactDOM","render","I18nextProvider","i18n","document","getElementById"],"mappings":"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","file":"static/js/main.aeb367e8.chunk.js","sourcesContent":["import React from 'react';\r\n\r\nfunction Lodding(){\r\n    return(\r\n        <div className=\"lodding-bg\">\r\n            <div className=\"lodding-box\">\r\n                <div className=\"lodding\"></div>\r\n                <div className=\"lodding-txt\">Loading...</div>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\nexport default Lodding;","import React from 'react';\r\n// import Moment from \"react-moment\";\r\n// import axios from \"axios\";\r\n// import * as utils from '../common/utils';\r\nimport Lodding from \"../common/Lodding\";\r\nimport \"../../css/login.css\";\r\n\r\nclass Login extends React.Component {\r\n  // constructor(props) {\r\n  //   super(props);      \r\n  // };\r\n  state = {\r\n    isLoading: false,\r\n    username:'',\r\n    password:''\r\n  };  \r\n  handleClick(event){        \r\n    // document.cookie = \"rankingball_id=f0f4f0ed-4703-4ea3-9e90-2afd4cb85223\";    \r\n    // axios.post('http://dev.rankingball.com:13001/login', { \r\n    //   id : \"kurt@rankingball.com\", \r\n    //   password : \"ars0067546!\" \r\n    // }) .then(function (response) { \r\n    //   console.log(response); \r\n    // }) .catch(error => { \r\n    //   console.log('error : ',error.response) \r\n    // });\r\n  }\r\n  _dbTest = async() => {    \r\n    // const res = await axios.get('/api/test');    \r\n    // console.log(res.data);\r\n  }\r\n  componentDidMount(){  \r\n    //this._dbTest();\r\n  };  \r\n  render() {   \r\n    const {isLoading} = this.state;                    \r\n    return (      \r\n        <div className=\"\">                  \r\n          {isLoading ? (\r\n            <Lodding />\r\n          ) : (\r\n            <div className=\"login-content\">              \r\n              {/* <h1 className=\"logo\"></h1> */}\r\n              <button className=\"btn close\" type=\"button\">\r\n                <div className=\"icon-wrapper\">\r\n                  <span className=\"icon-bar\"></span>\r\n                  <span className=\"icon-bar\"></span>\t\t\t\t\t\t\t\t\t\t\t\t\t\r\n                </div>\r\n              </button>\r\n              <h2>RANKINGBALL</h2>\r\n              <p className=\"sub-tit\">LOGIN</p> \r\n              <div className=\"form-content\">\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\r\n                <span className=\"i i-user\"></span>\r\n                {/* <input type=\"text\" className=\"\" name=\"username\" placeholder=\"Email\" value=\"${username}\"/> */}\r\n              </div>\r\n              <div className=\"form-content\">\r\n                <span className=\"i i-pass\"></span>\r\n                <input type=\"password\" className=\"\" name=\"password\" placeholder=\"Password\"/>\r\n              </div>\r\n              <div className=\"form-content\">\r\n                <div>\t\t\t\t    \t\t\t\t\t\t\t    \t\r\n                  <input id=\"remember_me\" name =\"remember_me\" type=\"checkbox\"/>\r\n                  {/* <label for=\"remember_me\"><span></span>Remember</label> */}\r\n                </div>\r\n                <div><a href=\"/forget\">Forgot your password</a></div>\r\n              </div>\r\n              <div className=\"form-content\">\t\t    \t\r\n                {/* <input id=\"btnLogin\" className=\"btn\" type=\"submit\" value=\"Login\" /> */}\r\n                <input type=\"submit\" onClick={(event) => this.handleClick(event)} />\r\n              </div>\r\n            </div>                \r\n          )}          \r\n        </div>\r\n      )\r\n      //return end\r\n  }\r\n  //render end\r\n};\r\nexport default Login;","import _ from 'lodash';\r\n\r\nexport const DATA_URL = 'https://dev.rankingball.com:13001/';\r\nexport const IMAGE_URL = 'https://cdnnew.rankingball.com/img/';\r\nexport const SPORTS_MY = 1;\r\nexport const SPORTS_FEATURED = 104000;\r\nexport const SPORTS_MLB = 104002;\r\nexport const SPORTS_SOCCER = 104001;\r\nexport const SPORTS_NFL = 104003;\r\nexport const SPORTS_NBA = 104004;\r\nexport const SPORTS_KBO = 104012;\r\nexport const ESPORTS_FEATURED = 105000;\r\nexport const ESPORTS_LOL = 105001;\r\nexport const ESPORTS_CS = 105002;\r\nexport const ESPORTS_DOTA = 105003;\r\nexport const ESPORTS_PUBG = 105004;\r\n\r\n//gameType return class \r\nexport function getAbbr(gameType) {\t\t\r\n    switch(gameType){\r\n    case 1 :\r\n        return \"my\";\r\n    case 104001:\r\n        return \"soccer\";\r\n    case 104002:\r\n        return \"mlb\";\r\n    case 104003:\r\n        return \"nfl\";\r\n    case 104004:\r\n        return \"nba\";\r\n    case 104012:\r\n        return \"kbo\";\r\n    case 105001:\r\n        return \"lol\";\r\n    case 105002:\r\n        return \"cs\";\r\n    case 105003:\r\n        return \"dota\";\r\n    case 105004:\r\n        return \"pubg\";\r\n    default :       \r\n    }    \r\n}\r\n//gameType return league \r\nexport function getGame(gameType) {\t\t\r\n    switch(gameType){\r\n    case 104001:\r\n        return \"SOCCER\";\r\n    case 104002:\r\n        return \"MLB\";\r\n    case 104003:\r\n        return \"NFL\";\r\n    case 104004:\r\n        return \"NBA\";\r\n    case 104012:\r\n        return \"KBO\";\r\n    case 105001:\r\n        return \"LOL\";\r\n    case 105002:\r\n        return \"CS\";\r\n    case 105003:\r\n        return \"DOTA\";\r\n    case 105004:\r\n        return \"PUBG\";\r\n    default :  \r\n    }\r\n}\r\n\r\n//gameType return menu text \r\nexport function getMenu(gameType) {\t\t\r\n    switch(gameType){\r\n    case 104001:\r\n        return \"Soccer\";\r\n    case 104002:\r\n        return \"baseball\";\r\n    case 104003:\r\n        return \"football\";\r\n    case 104004:\r\n        return \"basketball\";\r\n    case 104012:\r\n        return \"baseball\";\r\n    case 105001:\r\n        return \"League of Legends\";\r\n    case 105002:\r\n        return \"Counter Strike\";\r\n    case 105003:\r\n        return \"DOTA\";\r\n    case 105004:\r\n        return \"Battle Grounds\";\r\n    default :  \r\n    }\r\n}\r\n\r\n//gameType return league \r\nexport function getContestType(contestType) {\t\t\r\n    switch(contestType){                \r\n    case 114001:\r\n        return \"TNMT\";\r\n    case 114002:\r\n        return \"50/50\";\r\n    case 114003:\r\n        return \"30/30\";\r\n    case 114004:\r\n        return \"H2H\"; \r\n    case 114005:\r\n        return \"SCORE\"; \r\n    case 114006:\r\n        return \"LINE\"; \r\n    case 114011:\r\n        return \"TNMT\";\r\n    case 114012:\r\n        return \"50/50\";\r\n    case 114013:\r\n        return \"30/30\";\r\n    case 114014:\r\n        return \"H2H\"; \r\n    default :    \r\n    }       \r\n}\r\n\r\n//match list date groupBy\r\nexport function groupBy(array, key) {\r\n    return array.reduce((result, currentValue) => {                \r\n      var startDate = new Date(currentValue.st);                                \r\n      var formatted = startDate.toLocaleDateString(\"en-US\");                 \r\n      var numberDate = formatted.split(\"/\");         \r\n      var yearDate = numberDate.splice(-1)[0];      \r\n      numberDate.splice(0, 0, yearDate);        \r\n      var groupDate = numberDate.join(\"\");              \r\n      (result[groupDate] = result[groupDate] || []).push(\r\n        currentValue                    \r\n      );        \r\n      return result;\r\n    }, {});\r\n}; \r\n\r\n//paging \r\nexport function paginate(items, pageNumber, pageSize) {\r\n    const startIndex = (pageNumber - 1) * pageSize; // 자를 배열의 시작점\r\n    /* 배열을 lodash wrapper로 변형 */\r\n    return _(items)\r\n        .slice(startIndex) // 시작점부터 배열을 자르되\r\n        .take(pageSize) // pageSize만큼의 배열을 취함\r\n        .value(); // lodash wrapper 객체를 regular 배열로 변환\r\n}","import React from \"react\";\nimport { Link } from \"react-router-dom\";\nfunction Top(){\n    return(\n        <header className=\"top\">\n            <h1 className=\"logo\">                \n                <Link to={{pathname: `/`}}><div className=\"home-logo\"></div></Link>\n                <div className=\"sub-logo\"></div>\n                <div className=\"goto-gdc\"></div>\n            </h1> \n            <div className=\"infor-player login\">\n                <span className=\"noti\"></span>\n                <span className=\"guide\"></span>\n                <span className=\"inbox\"></span>\n                <Link to=\"/login\" ><span className=\"my-infor\"></span></Link>\n            </div>\n        </header>\n    ); \n}\nexport default Top;","import React from \"react\";\n\nfunction Footer(){\n    return (\n        <footer>\n            <div className=\"footer-txt\">\t\n                <p>© RankingBall Inc. 200 Spectrum Center Dr ste 300, Irvine, CA, 92618, USA | <a href=\"mailto:support@rankingball.com\">support@rankingball.com</a> | <a href=\"#terms\">Terms of Use</a> | <a href=\"#policy\">Privacy Policy</a></p>\n                <p>COPYRIGHT © 2018 RANKINGBALL Inc. ALL RIGHTS RESERVED</p>\n            </div>           \n        </footer>\n    )\n}\n\nexport default Footer;","import React, {Component, Suspense } from \"react\";\nimport axios from \"axios\";\nimport { withTranslation } from \"react-i18next\";\nimport * as utils from './utils';\n\nclass LegacyComponentClass extends Component {\n    render() {\n      const { t , gametype } = this.props;  \n      return (\n        <span>{t(gametype)}</span>\n      )\n    }\n};\nconst MyComponent = withTranslation('common')(LegacyComponentClass);\n\nclass TopMenu extends Component {\n    // constructor(props) {\n    //     super(props);        \n    // };\n    state = {\n        isLoading: true,\n        topmenu: [],        \n        contest : this.props.contest        \n    };    \n    getTopMenu = async () =>{\n        const  {data : {result: topmenu }} = await axios.get(utils.DATA_URL+\"/menu/103001\");        \n        this.setState({topmenu, isLoading :false});        \n    };                     \n    getTopMenuClick(gametype, submenu){        \n        this.setState({tabActive: gametype});\n        this.setState({tabSubActive: 0});\n\n        var local_gametype = localStorage.getItem('gametype');\n        //if(gametype === 104002){            \n            // localStorage.setItem('gametype', 104012);            \n            // if(gametype===undefined){                        \n            //     this.props.onChange(local_gametype, submenu);\n            // }else{                                                                                                 \n            //     this.props.onChange(104012, submenu);\n            // }     \n        //}else{            \n            localStorage.setItem('gametype', gametype);            \n            if(gametype===undefined){                        \n                this.props.onChange(local_gametype, submenu);            \n            }else{                                                                                                 \n                this.props.onChange(gametype, submenu);\n            }    \n        //}                          \n    };      \n    getTopSubMenuClick(gametype, submenu, id){           \n        this.setState({tabSubActive: id});\n        //console.log(gametype);\n        //console.log(submenu);\n        var local_gametype = localStorage.getItem('gametype');\n        if(gametype === 104002){            \n            localStorage.setItem('gametype', 104012);            \n            if(gametype===undefined){                        \n                this.props.onChange(local_gametype, submenu);            \n            }else{                                                                                                 \n                this.props.onChange(104012, submenu);\n            }     \n        }else{            \n            localStorage.setItem('gametype', gametype);            \n            if(gametype===undefined){                        \n                this.props.onChange(local_gametype, submenu);            \n            }else{                                                                                                 \n                this.props.onChange(gametype, submenu);\n            }    \n        }                   \n    };   \n    componentDidMount(){\n        this.getTopMenu(); \n    }; \n    render() {          \n        const {isLoading, topmenu} = this.state;        \n        var local_gametype = localStorage.getItem('gametype');  \n        const onoff = this.props.contest ? \"off\" : \"on\";  \n        \n        return (      \n            <div>\n                {isLoading ? (\n                <div className=\"loader\">\n                    <span className=\"loader-text\">Loading...</span>\n                </div>\n            ) : (\n                <div className=\"top-type-menu\" >\n                    <ul className={`type-tab type-104002-bg`}>                                                                                                         \n                    <li id={0} onClick={() => this.getTopMenuClick(1,106001)} className={this.state.tabActive === 0 ? \"active\" : \"\"} >\n                        <div>\n                            <em className=\"i-000000\"></em>\n                            <span>MyGame</span>\n                        </div>\n                    </li>\n                    {topmenu.map((topmenulist, index) =>(                                            \n                        <li \n                            key={topmenulist.game_type} \n                            id={index+1}\n                            gametype={topmenulist.game_type} \n                            display={topmenulist.web_pro_display_yn} \n                            order={topmenulist.web_pro_order}\n                            onClick={() => this.getTopMenuClick(topmenulist.game_type, 106001)}\n                            className={this.state.tabActive === topmenulist.game_type ? \"active\" : \"\"}\n                            >                                                                                     \n                            <div>\n                            <em className={\"i-\"+topmenulist.game_type}></em>\n                            <Suspense fallback=\"loading\">\n                                <MyComponent gametype={topmenulist.game_type} />\n                            </Suspense>\n                            </div>                            \n                        </li>\n                    ))}\n                     <li><div><span>SWEEPSTAKES</span></div></li>   \n                    </ul>\n                    \n                    <div className={\"top-sub-menubox \"+onoff}>\n                        <ul id=\"topMenuType\" className=\"top-sub-menu\">\t\t\n                            <li className={this.state.tabSubActive === 0 ? \"active\" : \"\"} onClick={() => this.getTopSubMenuClick(local_gametype, 106001, 0)}>Upcoming {local_gametype}</li>\n                            <li className={this.state.tabSubActive === 1 ? \"active\" : \"\"} onClick={() => this.getTopSubMenuClick(local_gametype, 106002, 1)}>Live {local_gametype}</li>\n                            <li className={this.state.tabSubActive === 2 ? \"active\" : \"\"} onClick={() => this.getTopSubMenuClick(local_gametype, 106003, 2)}>History {local_gametype}</li>\n                        </ul>\n                    </div>                                                \n                </div>        \n            )}          \n            </div>\n          )\n    }\n};\nexport default TopMenu;","import React from \"react\";\r\n\r\nclass Staticon extends React.Component {\r\n  // constructor(props) {\r\n  //   super(props);        \r\n  // };\r\n  render() {        \r\n    const onoff = this.props.contest ? \"off\" : \"on\";    \r\n    return(    \r\n        <div className={\"stat-icon \"+onoff}>                      \r\n          <span className=\"lineup\">Lineup released</span>\r\n          <span className=\"stream\">Live Stream match</span>\r\n          <span className=\"live\">Exclusive Live</span>                                            \r\n          <div className=\"btn-box\">\r\n            <span className=\"tit\">RankingBall App</span>\r\n            <span className=\"btn-ios\"></span>\r\n            <span className=\"btn-aos\"></span>\r\n          </div>                                            \r\n        </div>\r\n    )\r\n  }\r\n};\r\nexport default Staticon;","import React from 'react';\nimport Moment from \"react-moment\";\nimport Countdown,{zeroPad} from 'react-countdown';\nimport * as utils from '../common/utils';\n\nclass UpComing extends React.Component { \n  state = {        \n    id: this.props.gi,\n    submenu: this.props.submenu,\n    gameid: this.props.gi,\n    gametype: this.props.gt,\n    homeabbr: this.props.hta,\n    awayabbr: this.props.ata,\n    hometeam: this.props.htn,\n    awayteam: this.props.atn, \n    gp: this.props.gp, \n    cc: this.props.cc,   \n    ln: this.props.ln,\n    hs: this.props.hs,\n    as: this.props.as,\n    st: this.props.st  \n  };\n  getContestClick(gametype, gameid, submenu){ \n    this.props.onChange(gametype, gameid, submenu);\n  }\n  render() {     \n    const {id, submenu, gameid, gametype, homeabbr, awayabbr, hometeam, awayteam, gp, cc, ln, hs, as, st} = this.state;    \n    return (    \n      <div id={id} className={\"match-box \" +utils.getAbbr(gametype)} onClick={() => this.getContestClick(gametype, gameid, submenu)}>        \n        <div className=\"match-top\">\n          <div className=\"league-box\">\n            <div>\n              <p className={\"i-\"+gametype}></p>\n              <span>{ln}</span>\n            </div>\n            <p><Moment format=\"hh:mm A z\">{st}</Moment></p>\n          </div>  \n          <span className=\"join\" >JOINED</span>\n          <span className=\"match-time\">\n          <Countdown date={st} renderer={\n            st => <div>{st.days || 0 ? (st.days+\"d \"):(\"\")}{zeroPad(st.hours)}:{zeroPad(st.minutes)}:{zeroPad(st.seconds)}</div>\n          } />\n          </span>\n          <div className=\"stats-box\">\n              <span className=\"stream\"></span>\n              <span className=\"live\" ></span>\n              <span className=\"lineup\"></span>\n              <span className=\"btn-stats off\">Game Stats</span>\n          </div>\t\t\t\t\t\n        </div> \n        <div className=\"match-bottom\">           \n          {gametype===104001 && (//soccer\n            <div className=\"soccer-team-box\">\n              <div className=\"home\">\n                <span className=\"t-team home\">{hometeam} </span>\n                <span className=\"score\"><em>&#40;{hs}&#41;</em></span>\n              </div>\n              <div className=\"away\">\n                <span className=\"t-team away\">{awayteam} </span>\n                <span className=\"score\"><em>&#40;{as}&#41;</em></span>\n              </div>\n            </div>\n          )}\n          {gametype===104002 && (//mlb\n            <div className=\"team-box\">\n              <div>\n                <span className={\"t-logo logo-\"+utils.getGame(gametype)+\"-\"+awayabbr}></span>             \n                <span className=\"t-team home\">{awayabbr} <em>&#40;{as}&#41;</em></span>\t\t\t\t\t\t\t\n              </div>\n              <div>\n                <span className={\"t-logo logo-\"+utils.getGame(gametype)+\"-\"+homeabbr}></span>\n                <span className=\"t-team away\">{homeabbr} <em>&#40;{hs}&#41;</em></span>\t\t\t\t\t\t\t\n              </div>\n            </div>\n          )}\n          {gametype===104012 && (//kbo\n            <div className=\"team-box\">\n              <div>\n                <span className={\"t-logo logo-\"+utils.getGame(gametype)+\"-\"+awayabbr}></span>             \n                <span className=\"t-team home\">{awayteam} <em>&#40;{as}&#41;</em></span>\t\t\t\t\t\t\t\n              </div>\n              <div>\n                <span className={\"t-logo logo-\"+utils.getGame(gametype)+\"-\"+homeabbr}></span>\n                <span className=\"t-team away\">{hometeam} <em>&#40;{hs}&#41;</em></span>\t\t\t\t\t\t\t\n              </div>\n            </div>\n          )}\n          {(gametype===104003 || gametype===104004 || gametype===105001) && (//lol, nfl, nba \n            <div className=\"team-box\">              \n              <div>\n                <span className={\"t-logo logo-\"+utils.getGame(gametype)+\"-\"+homeabbr}></span>\n                <span className=\"t-team away\">{homeabbr} <em>&#40;{hs}&#41;</em></span>\t\t\t\t\t\t\t                \n              </div>\n              <div>\n                <span className={\"t-logo logo-\"+utils.getGame(gametype)+\"-\"+awayabbr}></span>             \n                <span className=\"t-team home\">{awayabbr} <em>&#40;{as}&#41;</em></span>\t\t\t\t\t\t\t\n              </div>\n            </div>\n          )}\n          <div className=\"total-box\">\n            <p className=\"t-prize\">GUARANTEED PRIZE</p>\n            <div className=\"t-sum\">            \n              <span className=\"asset-121002\">{                \n                gp || undefined ? (gp.toLocaleString()):(0)              \n              }</span>\t\t\t\n            </div>\n            <p className=\"t-total\">TOTAL <span>{cc}</span> CONTESTS</p>\n          </div>\n        </div>\n      </div>   \n    )\n    //return end\n  }\n  //render end\n};\nexport default UpComing;","import React from 'react';\n//import {Link} from \"react-router-dom\";\nimport * as utils from '../common/utils';\nimport Moment from \"react-moment\";\n\nfunction MatchLive({ id, gameid, gametype, homeabbr, awayabbr, hometeam, awayteam, gp, cc, ln, hs, as, st, gs, hsc, asc, myec}){          \n  const my = myec = \"0\" ? \"\" : \"mygm\";\n  return (    \n    <div id={id} className={\"match-live-list \" +utils.getAbbr(gametype)}>\n\n      {gametype===104001 && (//soccer\n        <div className={\"match-live \" + my}>\n          <div className=\"tm-first\"> \n            <span className=\"t-first\">{hometeam}</span>            \n            <span className=\"t-board\">{hsc}</span>\n          </div>\n          <div className=\"tm-infor\">\n            <span><em className={\"i-\"+gametype}></em>{utils.getGame(gametype)} - {ln}</span>\t\n            <span><Moment format=\"ddd, MMM D\">{st}</Moment><br /><Moment format=\"hh:mm A z\">{st}</Moment></span>\t        \n            <span>{gs}</span>\n          </div>\t\t\n          <div className=\"tm-second\">\n            <span className=\"t-board\">{asc}</span>            \n            <span className=\"t-second\">{awayteam}</span>\n          </div>\t\n        </div>\n      )}\n\n      {gametype===104002 && (//mlb\n        <div className={\"match-live \" + my}>\n          <div className=\"tm-first\"> \n            <span className=\"t-first\">{awayabbr}</span>\n            <span className={\"t-logo logo-\"+utils.getGame(gametype)+\"-\"+awayabbr}></span>\n            <span className=\"t-board\">{asc}</span>\n          </div>\n          <div className=\"tm-infor\">\n            <span><em className={\"i-\"+gametype}></em>{utils.getGame(gametype)} - {ln}</span>\t\n            <span><Moment format=\"ddd, MMM D\">{st}</Moment><br /><Moment format=\"hh:mm A z\">{st}</Moment></span>\t      \n            <span>{gs}</span>\n          </div>\t\t\n          <div className=\"tm-second\">\n            <span className=\"t-board\">{hsc}</span>\n            <span className={\"t-logo logo-\"+utils.getGame(gametype)+\"-\"+homeabbr}></span>\n            <span className=\"t-second\">{homeabbr}</span>\n          </div>\t\n        </div>\n      )}\n      {gametype===104012 && (//kbo\n        <div className={\"match-live \" + my}>\n          <div className=\"tm-first\"> \n            <span className=\"t-first\">{hometeam}</span>\n            <span className={\"t-logo logo-\"+utils.getGame(gametype)+\"-\"+homeabbr}></span>\n            <span className=\"t-board\">{hsc}</span>\n          </div>\n          <div className=\"tm-infor\">\n            <span><em className={\"i-\"+gametype}></em>{utils.getGame(gametype)} - {ln}</span>\t\n            <span><Moment format=\"ddd, MMM D\">{st}</Moment><br /><Moment format=\"hh:mm A z\">{st}</Moment></span>\t      \n            <span>{gs}</span>\n          </div>\t\t\n          <div className=\"tm-second\">\n            <span className=\"t-board\">{asc}</span>\n            <span className={\"t-logo logo-\"+utils.getGame(gametype)+\"-\"+awayabbr}></span>\n            <span className=\"t-second\">{awayteam}</span>\n          </div>\t\n        </div>\n      )}\n\n      {(gametype===104003 || gametype===104004 || gametype===105001) && (//lol, nfl, nba \n        <div className={\"match-live \" + my}>\n          <div className=\"tm-first\"> \n            <span className=\"t-first\">{homeabbr}</span>\n            <span className={\"t-logo logo-\"+utils.getGame(gametype)+\"-\"+homeabbr}></span>\n            <span className=\"t-board\">{hsc}</span>\n          </div>\n          <div className=\"tm-infor\">\n            <span><em className={\"i-\"+gametype}></em>{utils.getGame(gametype)} - {ln}</span>\t\n            <span><Moment format=\"ddd, MMM D\">{st}</Moment><br /><Moment format=\"hh:mm A z\">{st}</Moment></span>\t      \n            <span>{gs}</span>\n          </div>\t\t\n          <div className=\"tm-second\">\n            <span className=\"t-board\">{asc}</span>\n            <span className={\"t-logo logo-\"+utils.getGame(gametype)+\"-\"+awayabbr}></span>\n            <span className=\"t-second\">{awayabbr}</span>\n          </div>\t\n        </div>\n      )}\n\n    </div>           \n  )\n};  \nexport default MatchLive;","import React from 'react';\n//import {Link} from \"react-router-dom\";\nimport * as utils from '../common/utils';\nimport Moment from \"react-moment\";\n\nfunction MatchHistory({ gametype, homeabbr, awayabbr, hometeam, awayteam, gp, cc, ln, hs, as, st, gs ,hsc , asc, myec, tp, tw}){          \n  //const my = myec = \"0\" ? \"\" : \"mygm\";    \n  const hWin = hsc > asc || hsc === asc ? \"\" : \"lose\";  \n  const AWin = asc > hsc || asc === hsc ? \"\" : \"lose\";    \n  const lns = ln.indexOf(\"-\") ? ln.split(\"-\")[0] : ln;  \n  \n  return (\n      <div className={\"match-box \" +utils.getAbbr(gametype)+\" his\"}>\n        <div className=\"match-top\">\n          <div className=\"league-box\">\n            <div>\n              <p className={\"i-\"+gametype}></p>\n              <span>{lns}</span>\n            </div>\n            <p><Moment format=\"hh:mm A z\">{st}</Moment></p>\n          </div>  \n          <span className=\"join\" >JOINED</span>\n          <span className=\"match-time\">\n            {gs}\n          </span>\n          <div className=\"stats-box\">\n              <span className=\"stream\"></span>\n              <span className=\"live\" ></span>\n              <span className=\"lineup\"></span>\n              <span className=\"btn-stats off\">Game Stats</span>\n          </div>\t\t\t\t\t\n        </div> \n        <div className=\"match-bottom\">           \n          {gametype===104001 && (//soccer\n            <div className=\"soccer-team-box\">\n              <div className=\"home\">\n                <span className=\"t-team home\">{hometeam} </span>\n                <span className=\"score\"><em>&#40;{hs}&#41;</em></span>\n              </div>\n              <div className=\"away\">\n                <span className=\"t-team away\">{awayteam} </span>\n                <span className=\"score\"><em>&#40;{as}&#41;</em></span>\n              </div>\n            </div>\n          )}\n          {(gametype===104002 || gametype===104012) && (//kbo,mlb\n            <div className=\"team-box\">\n              <div className={AWin}>\n                <span className={\"t-logo logo-\"+utils.getGame(104012)+\"-\"+awayabbr}></span>             \n                <span className=\"t-team home\">{awayteam} </span>\t\t\t\t\t\t\t\n                <span className=\"score\">{asc}</span>\t                \t\t\t\t\t                \n              </div>\n              <div className={hWin}>\n                <span className={\"t-logo logo-\"+utils.getGame(104012)+\"-\"+homeabbr}></span>\n                <span className=\"t-team away\">{hometeam} </span>\t\t\t\t\t\t\t\n                <span className=\"score\">{hsc}</span>\t\n              </div>\n            </div>\n          )}\n          {(gametype===104003 || gametype===104004 || gametype===105001) && (//lol, nfl, nba \n            <div className=\"team-box\">              \n              <div className={hWin}>\n                <span className={\"t-logo logo-\"+utils.getGame(gametype)+\"-\"+homeabbr}></span>\n                <span className=\"t-team away\">{homeabbr} <em>&#40;{hs}&#41;</em></span>\t\n                <span className=\"score\">{hsc}</span>\t\t\t\t\t\t                \n              </div>\n              <div className={AWin}>\n                <span className={\"t-logo logo-\"+utils.getGame(gametype)+\"-\"+awayabbr}></span>             \n                <span className=\"t-team home\">{awayabbr} <em>&#40;{as}&#41;</em></span>\t\t\t\t\t\t\t\n                <span className=\"score\">{asc}</span>\t\t\t\t\t\t                \n              </div>\n            </div>\n          )}\n          <div className=\"total-box\">\n            <p className=\"t-prize\">TOTAL PRIZES</p>\n            <div className=\"t-sum\">            \n              <span className=\"asset-121002\">{                \n                tp || undefined ? (tp.toLocaleString()):(0)              \n              }</span>\t\t\t\n            </div>\n            <p className=\"t-total\">TOTAL <span> <strong>{ tw || undefined ? (tw):(0) }</strong>  WINNERS</span></p>\n          </div>\n        </div>\n      </div>             \n  )\n};  \nexport default MatchHistory;","import React from 'react';\nimport Moment from \"react-moment\";\nimport axios from \"axios\";\nimport * as utils from '../common/utils';\nimport Lodding from \"../common/Lodding\";\nimport UpComing from \"./UpComing\";\nimport MatchLive from \"./MatchLive\";\nimport MatchHistory from \"./MatchHistory\";\nimport \"../../css/main.css\";\n\nclass Match extends React.Component {\n  state = {\n    isLoading: true,\n    matchs: [],  \n    gametype: this.props.gametype,\n    submenu: this.props.submenu,\n    match: true,\n    contest: false      \n  };\n  getMatch = async (gametype, submenu) =>{    \n    if(gametype === 104002 || gametype === 104012){\n      const {data : {result: matchslistMLB }} = await axios.get(utils.DATA_URL+`game/${submenu}/103001/104002?type=code`);               \n      const {data : {result: matchslistKBO }} = await axios.get(utils.DATA_URL+`game/${submenu}/103001/104012?type=code`);\n      const matchsMLB = utils.groupBy(matchslistMLB, \"st\");            \n      const matchsKBO = utils.groupBy(matchslistKBO, \"st\");                 \n      const matchs = {...matchsMLB, ...matchsKBO}\n            \n      this.setState({matchs: matchs , submenu, isLoading :false});\n    }else{\n      const {data : {result: matchslist }} = await axios.get(utils.DATA_URL+`game/${submenu}/103001/${gametype}?type=code`);               \n      const matchs = utils.groupBy(matchslist, \"st\");            \n      this.setState({matchs, submenu, isLoading :false});\n    }\n    \n  };   \n  getMatchChange = async (gametype, submenu) =>{\n    this.setState({isLoading :true});\n    // const {data : {result: matchslist }} = await axios.get(utils.DATA_URL+`game/${submenu}/103001/${gametype}?type=code`);                 \n    // const matchs = utils.groupBy(matchslist, \"st\");     \n    // this.setState({matchs, submenu, isLoading :false});                   \n\n    if(gametype === 104002 || gametype === 104012){\n      const {data : {result: matchslistMLB }} = await axios.get(utils.DATA_URL+`game/${submenu}/103001/104002?type=code`);               \n      const {data : {result: matchslistKBO }} = await axios.get(utils.DATA_URL+`game/${submenu}/103001/104012?type=code`);\n      const matchsMLB = utils.groupBy(matchslistMLB, \"st\");            \n      const matchsKBO = utils.groupBy(matchslistKBO, \"st\");            \n      const matchs = {...matchsMLB, ...matchsKBO}\n      this.setState({matchs: matchs , submenu, isLoading :false});\n    }else{\n      const {data : {result: matchslist }} = await axios.get(utils.DATA_URL+`game/${submenu}/103001/${gametype}?type=code`);               \n      const matchs = utils.groupBy(matchslist, \"st\");            \n      this.setState({matchs, submenu, isLoading :false});\n    }\n\n  }; \n  getChildContest = (gametype, gameid, submenu) =>{        \n    localStorage.setItem('gametype',gametype);    \n    this.props.onChange(gametype, gameid, submenu);\n  }; \n  componentDidMount(){\n    this.getMatch(this.state.gametype, this.state.submenu);    \n  };\n  componentDidUpdate(prevProps) {        \n    if (this.props.gametype !== prevProps.gametype || this.props.submenu !== prevProps.submenu ) {      \n      this.getMatchChange(this.props.gametype, this.props.submenu);  \n    }\n  }    \n  render() {   \n    const {isLoading, matchs} = this.state;\n      var local_gametype = localStorage.getItem('gametype');          \n      if(local_gametype === undefined){\n          localStorage.setItem('gametype',105001);\n      }                       \n    return (      \n        <div>                  \n          {isLoading ? (\n            <Lodding />\n          ) : (\n            <div>              \n              {Object.keys(matchs).length < 1 && Object.getOwnPropertyNames(matchs) < 1 ? \n                (\n                  <div className=\"no-list\"><div className=\"txt1\">no data</div></div>  \n                ):(\n\n                  <div className=\"match-content\">                    \n                    {this.state.submenu === 106001 && (//UpComing                      \n                      <ul className=\"match-list\"> \n                      {Object.keys(matchs).map((key ,index) => {\n                          return (\n                            <li key={index}>\n                              <div className=\"date-tit\"><Moment format=\"MMM DD, YYYY\">{matchs[key][0].st}</Moment></div>\n                              {matchs[key].map((match, index) => {                                \n                                return (                                                                                    \n                                  <UpComing key={index} submenu={this.state.submenu} {...match} onChange={this.getChildContest} />                             \n                                )                                                    \n                              })}                        \n                            </li>\n                          )\n                      })}\n                      </ul>                                    \n                    )}                                 \n                    {this.state.submenu === 106002 && (//Live\n                      <div>\n                      {Object.keys(matchs).map((key, index) => {                  \n                        return ( \n                          <ul className=\"match-list\" key={index}>                                 \n                              {matchs[key].map((match, index) => {                                \n                                return (                   \n                                  <li key={index}>                                                  \n                                    <MatchLive                                                              \n                                      id={match.gi}\n                                      gameid={match.gi} \n                                      gametype={match.gt} \n                                      homeabbr={match.hta} \n                                      awayabbr={match.ata}\n                                      hometeam={match.htn} \n                                      awayteam={match.atn} \n                                      gp={match.gp} \n                                      cc={match.cc}   \n                                      ln={match.ln}\n                                      hs={match.hs}\n                                      as={match.as}\n                                      st={match.st}     \n                                      gs={match.gs}\n                                      hsc={match.hsc}\n                                      asc={match.asc}\n                                      myec={match.myec}              \n                                    /> \n                                  </li>\n                                )                                                    \n                              })}                                                    \n                        </ul> \n                        )\n                      })}\n                      </div>\n                    )}                                 \n                    {this.state.submenu === 106003 && (//History\n                      <ul className=\"match-list\"> \n                      {Object.keys(matchs).reverse().map((key ,index) => {                     \n                          return (\n                            <li key={index}>                    \n                              <div className=\"date-tit\"><Moment format=\"MMM DD, YYYY\">{matchs[key][0].st}</Moment></div>\n                              {matchs[key].map((match, index) => {                                \n                                return (                                                                                    \n                                  <MatchHistory                        \n                                    key={index}\n                                    id={match.gi}   \n                                    gameid={match.gi} \n                                    gametype={match.gt} \n                                    homeabbr={match.hta} \n                                    awayabbr={match.ata}\n                                    hometeam={match.htn} \n                                    awayteam={match.atn} \n                                    gp={match.gp} \n                                    cc={match.cc}   \n                                    ln={match.ln}\n                                    hs={match.hs}\n                                    as={match.as}\n                                    st={match.st}\n                                    hsc={match.hsc}\n                                    asc={match.asc}      \n                                    myec={match.myec}   \n                                    gs={match.gs}   \n                                    tp={match.tp}\n                                    tw={match.tw}\n                                    />                             \n                                )                                                    \n                              })}                        \n                            </li>\n                          )\n                      })}\n                      </ul>                       \n                    )}                                                              \n                  </div>\n                )\n              }              \n            </div>            \n          )}          \n        </div>\n      )\n      //return end\n  }\n  //render end\n};\nexport default Match;","import React from \"react\";\r\nimport Moment from \"react-moment\";\r\nimport Countdown,{zeroPad} from 'react-countdown';\r\nimport * as utils from '../common/utils';\r\nclass ContestInfo extends React.Component {\r\n  // constructor(props) {\r\n  //   super(props);        \r\n  // };\r\n  state = {                   \r\n    submenu: this.props.state.submenu,\r\n    gameid: this.props.state.gameid, \r\n    gametype: this.props.state.gametype,\r\n    hta: this.props.state.hta,          \r\n    ata: this.props.state.ata,             \r\n    gt: this.props.state.gt,     \r\n    ln: this.props.state.ln,     \r\n    st: this.props.state.st     \r\n  };\r\n  render() {        \r\n    const {gametype, hta, ata, ln, st} = this.state;    \r\n    return(    \r\n      <div className=\"contest-info\">\t\r\n        {gametype===104002 ? (//mlb          \r\n          <div className={\"tm-first back-logo backlogo-\"+utils.getGame(gametype)+\"-\"+ata}>\r\n            <span className=\"t-first\">{ata}</span>\r\n            <span className={\"t-logo logo-\"+utils.getGame(gametype)+\"-\"+ata}></span>            \r\n          </div>\r\n        ):(\r\n          <div className={\"tm-first back-logo backlogo-\"+utils.getGame(gametype)+\"-\"+hta}> \r\n            <span className=\"t-first\">{hta}</span>\r\n            <span className={\"t-logo logo-\"+utils.getGame(gametype)+\"-\"+hta}></span>\r\n          </div>\r\n        )}\r\n          <div className=\"tm-infor\">\t\t\t\r\n            <span>{utils.getGame(gametype)} - {ln}</span>\t\r\n            <span><Moment format=\"ddd, MMM D, hh:mm A z\">{st}</Moment></span>\t\t\t\t\t          \r\n            <span>\r\n            <Countdown date={st} renderer={\r\n              st => <div>{st.days || 0 ? (st.days+\"d \"):(\"\")}{zeroPad(st.hours)}:{zeroPad(st.minutes)}:{zeroPad(st.seconds)}</div>\r\n            } />\r\n            </span>\r\n          </div>\t\t\r\n        {gametype===104002 ? (//mlb          \r\n          <div className={\"tm-second back-logo backlogo-\"+utils.getGame(gametype)+\"-\"+hta}>             \r\n            <span className={\"t-logo logo-\"+utils.getGame(gametype)+\"-\"+hta}></span>\r\n            <span className=\"t-second\">{hta}</span>\r\n          </div>\r\n        ):(\r\n          <div className={\"tm-second back-logo backlogo-\"+utils.getGame(gametype)+\"-\"+ata}>\r\n            <span className={\"t-logo logo-\"+utils.getGame(gametype)+\"-\"+ata}></span>\r\n            <span className=\"t-second\">{ata}</span>\r\n          </div>\t \r\n        )}                             \r\n      </div>\r\n    )\r\n  }\r\n};\r\nexport default ContestInfo;","import React from 'react';\nimport {Link} from \"react-router-dom\";\nimport * as utils from '../common/utils';\n\nclass ContestList extends React.Component { \n  state = {\n    id: this.props.id,\n    gameType: this.props.gt,\n    gameId: this.props.gi,\n    featured: this.props.f,\n    contestType: this.props.ct,\n    users: this.props.u,\n    userMax: this.props.um,\n    percent: Math.ceil(this.props.u / this.props.um * 100),\n    totalPrize: this.props.tp,\n    fee: this.props.fe,\n    topValue : this.props.tv,\n    //asc: \"0\"\n    // at: 121005\n    // ata: \"DMO\"\n    // ati: \"126056\"\n    // atn: \"Dominus Esports\"\n    // awayScore: \"0\"\n    // bgt: 33\n    // bmi: 0\n    // br: 0\n    // bt: 0\n    // cgi: 500101\n    // convertValue: \"300\"\n    // ct: 114005\n    // dlt: 0\n    // dm: 0\n    // f: 1\n    // fe: 1\n    // fp: 0\n    // gi: \"565102\"\n    // gst: 202001\n    // gt: 105001\n    // homeScore: \"0\"\n    // hsc: \"0\"\n    // hta: \"FPX\"\n    // hti: \"1568\"\n    // htn: \"FunPlus Phoenix\"\n    // id: 67746\n    // it: 0\n    // j: 0\n    // li: \"294\"\n    // ln: \"LPL\"\n    // mbi: 0\n    // mc: 1\n    // mi: 41003\n    // mm: 200\n    // point: 0\n    // r: 0\n    // ra: 10\n    // rank: 0\n    // rat: 121002\n    // rd: 0\n    // rm: 0\n    // rt: 116001\n    // s: 1\n    // st: 1596445200000\n    // streamYn: 0\n    // t: \"LOL - LPL FPX@DMO |~| \"\n    // tp: 3500\n    // tv: 3500\n    // u: 36\n    // um: 200    \n  }\n  getContestModalClick(){ \n    this.props.onChange();\n  }\n  render() {             \n    //console.log(this.props);\n    const {id, gameId, featured, contestType, users, userMax, percent, totalPrize, fee, topValue} = this.state;\n    return(    \n      <div className=\"contest-box\" id={id} gameid={gameId}>\n        {featured ===1 ?(\n          <div className=\"contest featured\">\n            <div className=\"tit\" onClick={() => this.getContestModalClick()}>\n              <p>{utils.getContestType(contestType)}</p>\n              <p className=\"subtxt\">The Prize is determined by the score(or the number of lines) acquired, not by ranking.</p>\n            </div>                         \n            <div className=\"prizes\" onClick={() => this.getContestModalClick()}>\n              <span className=\"tit\">GUARANTEED IN PRIZES</span>\n              <div><span className=\"asset-121002\">{topValue.toLocaleString()}</span></div>\n            </div>        \n            <div className=\"entry-fee\">\n              <Link to={{pathname: `set/${id}`, props:this.props }}>\n              <div className=\"btn-box\">\n                <div className=\"entry-money\"><span className=\"asset-121005\">{fee}</span></div>\n                <div className=\"entry-txt\">JOIN</div>\n              </div>          \n              </Link>\n            </div> \n          </div>\n        ) : (\n          <div className=\"contest\" id={id} gameid={gameId}>\n            <div className=\"tit\" onClick={() => this.getContestModalClick()}>{utils.getContestType(contestType)}</div>        \n            <div className=\"grp-box\" onClick={() => this.getContestModalClick()}>\n              <div className=\"grp-txt\">\n                <span className=\"txt\">ENTRIES</span>\n                <div className=\"sum\"><span className=\"count\">{users}</span> / {userMax}</div>\n              </div>          \n              <div className=\"grp\"><span className=\"grp-bar\" style={{width: percent+\"%\"}} ></span></div>\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\n            </div>        \n            <div className=\"prizes\" onClick={() => this.getContestModalClick()}>\n              <span className=\"tit\">IN PRIZES</span>\n              <div><span className=\"asset-121002\">{totalPrize.toLocaleString()}</span></div>\n            </div>        \n            <div className=\"entry-fee\">\n              <Link to={{pathname: `set/${id}`, state:this.state }}>\n              <div className=\"btn-box\">\n                <div className=\"entry-money\"><span className=\"asset-121005\">{fee}</span></div>\n                <div className=\"entry-txt\">JOIN</div>\n              </div>      \n              </Link>    \n            </div> \n          </div> \n        )}                 \n      </div>\n    )\n  }\n};\nexport default ContestList;","import React from 'react';\r\nimport \"../../css/main.css\";\r\n//import ReactTransitionGroup from 'react-addons-css-transition-group';\r\nimport ReactTransitionGroup from 'react-transition-group/CSSTransitionGroup';\r\n\r\n\r\nconst Modal = ({ isOpen, close }) => {\r\n  return (\r\n    <React.Fragment>\r\n    {\r\n      isOpen ? (\r\n        <ReactTransitionGroup\r\n          transitionName={'Modal-anim'}\r\n          transitionEnterTimeout={200}\r\n          transitionLeaveTimeout={200}\r\n        >\r\n        <div className=\"Modal-overlay\" onClick={close} />\r\n        <div className=\"Modal\">\r\n          <p className=\"title\">contest info</p>\r\n          <div className=\"content\">\r\n            <p>\r\n                testtesttesttesttesttesttesttesttesttesttesttesttest\r\n                testtesttesttesttesttesttesttesttesttesttesttesttest\r\n                testtesttesttesttesttesttesttesttesttesttesttesttest\r\n                testtesttesttesttesttesttesttesttesttesttesttesttest\r\n                testtesttesttesttesttesttesttesttesttesttesttesttest\r\n    \t      </p>\r\n          </div>\r\n          <div className=\"button-wrap\">\r\n            <button onClick={close}>Confirm</button>\r\n          </div>\r\n        </div>\r\n      </ReactTransitionGroup>\r\n      ) :(\r\n        <ReactTransitionGroup transitionName={'Modal-anim'} transitionEnterTimeout={200} transitionLeaveTimeout={200} />\r\n      )  \r\n    }                \r\n    </React.Fragment>\r\n  )\r\n}\r\nexport default Modal;","import React from 'react';\nimport axios from \"axios\";\nimport * as utils from '../common/utils';\nimport Lodding from \"../common/Lodding\";\nimport ContestInfo from \"./ContestInfo\";\nimport ContestList from \"./ContestList\";\nimport Modal from '../modal/Modal';\nimport \"../../css/main.css\";\n\nclass Contest extends React.Component {\n  state = {\n    isLoading: true,\n    contestlist:[],\n    contest: true,\n    gametype: this.props.gametype, \n    gameid: this.props.gameid,   \n    submenu: this.props.submenu,    \n    count: 0,\n    isModalOpen: false\n  };\n  getContest = async (gametype, gameid, submenu) =>{  \n    const {data : {result: contestlist }} = await axios.get(utils.DATA_URL+`/contestnew?filterType=lobby&gameType=${gametype}&page=0&rows=20&order=date&asc=true&gameId=${gameid}&menuType=${submenu}`);                   \n    this.setState({ contestlist, \n                    main: false,\n                    count: contestlist.count,\n                    gt: contestlist.list[0].gt,\n                    ln: contestlist.list[0].ln,\n                    hta: contestlist.list[0].hta,\n                    ata: contestlist.list[0].ata,\n                    st: contestlist.list[0].st,\n                    isLoading :false\n                  });                  \n    //console.log(contestlist);     \n  }; \n  openModal = () => {\n    this.setState({ isModalOpen: true });\n  }\n  \n  closeModal = () => {\n    this.setState({ isModalOpen: false }); \n  }\n  componentDidMount(){\n    this.getContest(this.state.gametype, this.state.gameid, this.state.submenu);    \n  };  \n  render() {   \n    const {isLoading, contestlist} = this.state;\n\n      var local_gametype = localStorage.getItem('gametype');      \n      if(local_gametype === undefined){\n          localStorage.setItem('gametype',105001);\n      }\n      var userContestCnt = 0\n      //console.log(this.props);\n      \n      //document.cookie = \"rankingball_id=kurt@rankingball.com\";\n      //document.cookie = \"SESSION=d7aebd27-f43b-4fd6-b560-6cfc3117a1fa\";      \n    return (      \n        <div className={\"content bg-color \" +  utils.getAbbr(Number(local_gametype))}>         \n          {isLoading ? (\n            <Lodding />          \n          ) : (\n            <div>                     \n              <Modal isOpen={this.state.isModalOpen} close={this.closeModal} /> \n              <div className=\"contest-total\">\n                <span>TOTAL CONTESTS</span>\n                <span className=\"count\">{this.state.count}</span>\t\t\n              </div>\n              <ContestInfo state={this.state} />\n              <div className=\"contest-list\">                            \n              {contestlist.list.map((conlist, index) => {                                                                                                                         \n                  return (                                                 \n                    <div key={index}>\n                    {conlist.f === 1 ? (\n                      <div className=\"stream-tit\">RankingBall Streaming contest (Guaranteed Prize)</div>\n                    ):(\n                      <div>                                                \n                        {userContestCnt === 0 && (                          \n                          <div className=\"cont-tit\" index={userContestCnt++}>User Created Contest</div> \n                        )}                        \n                      </div>\n                    )}\n                    <ContestList key={index} {...conlist} onChange={this.openModal} />                             \n                    </div>                    \n                  )                                                    \n              })}\n              </div>       \n            </div>            \n          )}          \n        </div>\n      )\n  }\n};\nexport default Contest;","import React from 'react';\nimport * as utils from './common/utils';\nimport Top from \"./common/Top\";\nimport Footer from \"./common/Footer\";\nimport Lodding from \"./common/Lodding\";\nimport TopMenu from \"./common/TopMenu\";\nimport Staticon from \"./match/StatIcon\";\nimport Match from \"./match/Match\";\nimport Contest from \"./contest/Contest\";\nimport \"../css/main.css\";\n\nclass Main extends React.Component {\n  state = {\n    isLoading: true,\n    gametype: 105001,    \n    submenu: 106001,\n    match: true,\n    contest: false\n  };  \n  getParentsTopMenu = (gametype, submenu) =>{       \n    this.setState({gametype :gametype, submenu: submenu, match:true , contest:false });    \n  };\n  getParentsContest = (gametype, gameid, submenu) =>{            \n    this.setState({ match : false, \n                    contest: true, \n                    gametype: gametype, \n                    gameid: gameid, \n                    submenu: submenu});      \n  };\n  componentDidMount(){\n    this.setState({isLoading :false});      \n  };\n  render() {\n    const {isLoading, match, contest} = this.state;\n    var local_gametype = localStorage.getItem('gametype');          \n    if(local_gametype === undefined){\n      localStorage.setItem('gametype',105001);\n    }                     \n    return (\n      <div className=\"container\">\n        <Top />\n      \n        <div className={\"content bg-color \" +  utils.getAbbr(Number(local_gametype))}>\n          <TopMenu state={this.state} contest={contest} onChange={this.getParentsTopMenu} />\n          <Staticon contest={contest} />        \n          {isLoading ? (\n            <Lodding />          \n          ) : (\n            <div>                \n              {match ? (                             \n                  <Match gametype={this.state.gametype} submenu={this.state.submenu} onChange={this.getParentsContest} />\n                ):(\n                  <Contest gametype={this.state.gametype} gameid={this.state.gameid} submenu={this.state.submenu} />\n                )\n              }              \n            </div>            \n          )}          \n        </div>\n\n        <Footer />\n      </div>    \n    )\n    //return end\n  }\n  //render end\n};\nexport default Main;","import React from \"react\";\r\nimport * as utils from '../common/utils';\r\n\r\nclass SubTitle extends React.Component {  \r\n  state = {\r\n    gameType : this.props.gameType,\r\n    subTitle : this.props.subTitle                       \r\n  };\r\n  render() {        \r\n    const {gameType, subTitle} = this.state;    \r\n    return(    \r\n      <div className={\"sub-title \" + utils.getAbbr(Number(gameType))}>\r\n          <div className=\"title\">{subTitle}</div>\r\n          {subTitle ===\"Setup\" &&(\r\n            <ul className=\"grid-set-link\">\r\n              <li>Team &amp; Player Info</li>\r\n              <li>Entries</li>\r\n              <li>Prizes</li>\r\n              <li>Rules &amp; Scoring</li>                            \r\n            </ul>\r\n          )}          \r\n      </div>\r\n    )\r\n  }\r\n};\r\nexport default SubTitle;","import React from \"react\";\r\nimport Moment from \"react-moment\";\r\nimport Countdown,{zeroPad} from 'react-countdown';\r\nimport * as utils from '../common/utils';\r\nclass SettingTop extends React.Component {  \r\n  state = {\r\n    id: this.props.prop.id,\r\n    gameType: this.props.prop.gt,\r\n    gameId: this.props.prop.gi,\r\n    featured: this.props.prop.f,\r\n    contestType: this.props.prop.ct,\r\n    st: this.props.prop.st,\r\n    t: this.props.prop.t,\r\n    users: this.props.prop.u,\r\n    userMax: this.props.prop.um,\r\n    percent: Math.ceil(this.props.prop.u / this.props.prop.um * 100),\r\n    totalPrize: this.props.prop.tp,\r\n    fee: this.props.prop.fe,\r\n    topValue : this.props.prop.tv,\r\n  };  \r\n  render() {        \r\n    const {gameType, featured, st, t, users, userMax, percent, totalPrize, fee} = this.state;                    \r\n    //console.log(featured);\r\n    return(    \r\n        <div className=\"setting-top\">          \r\n            <div className={featured === 1 ? \"tit featured\" : \"tit\"}>\r\n              <div className={\"info-txt game-\"+gameType}>\r\n                  <span className=\"tit\">{utils.getMenu(Number(gameType))} SCORE DERBY</span>                    \r\n                  <span className=\"date\"><Moment format=\"ddd, MMM D, hh:mm A z\">{st}</Moment></span> \r\n                  <span className=\"reward-bonus bonus-open\"></span>\r\n              </div>\r\n              <div className=\"team-txt\">{utils.getMenu(Number(gameType))} - {t}  </div>                                                                     \r\n            </div>\r\n            <div className=\"tit-group\">\r\n              <div className=\"titbox\">\r\n                <span className=\"tit\">Starts in</span>                \r\n                <Countdown date={st} renderer={\r\n                  st => <p className=\"time\">{st.days || 0 ? (st.days+\"d \"):(\"\")}{zeroPad(st.hours)}:{zeroPad(st.minutes)}:{zeroPad(st.seconds)}</p>\r\n                } />                \r\n              </div>\r\n              <div className=\"grp-box\">\r\n                <div className=\"grp-txt\">\r\n                  <span className=\"txt\">Entries</span>\r\n                  <div className=\"sum\">{users} / {userMax}</div>\r\n                  <div className=\"sum-percent\"><span className=\"count\">{percent}</span>%</div>\r\n                </div>          \r\n                <div className=\"grp\"><span className=\"grp-bar\" style={{width: percent+\"%\"}}></span></div>\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\r\n              </div> \r\n              <div className=\"titbox\">\r\n                <span className=\"tit\">In Prizes</span>\r\n                <p><span className=\"asset-121002\">{totalPrize.toLocaleString()}</span></p>\r\n              </div>\r\n              <div className=\"titbox\">\r\n                <span className=\"tit\">Single Entry</span>\r\n              <p><span className=\"asset-121002\">{fee.toLocaleString()}</span></p>\r\n              </div>                  \r\n            </div>                                         \r\n        </div>\r\n    )\r\n  }\r\n};\r\nexport default SettingTop;","import React from \"react\";\r\nimport ReactTooltip from 'react-tooltip';\r\n//import * as utils from '../../common/utils';\r\nclass SelectTeam extends React.Component {\r\n  state = {                   \r\n    gameid: this.props.gi,\r\n    gametype: this.props.gt,\r\n    homeabbr: this.props.hta,\r\n    awayabbr: this.props.ata,\r\n    hometeam: this.props.htn,\r\n    awayteam: this.props.atn, \r\n    hpn: this.props.hpn,\r\n    apn: this.props.apn,\r\n    hps: this.props.hps,\r\n    aps: this.props.aps,\r\n    hpe: Math.round(this.props.hpe * 100) / 100,\r\n    ape: Math.round(this.props.ape * 100) / 100\r\n  };    \r\n  selectTeam(id, homeAway, state){           \r\n      this.setState({tabSubActive: id});            \r\n      this.props.onChange(homeAway, state);\r\n      //console.log(state);\r\n  };\r\n  componentDidUpdate(prevProps){       \r\n      //console.log(this.props); \r\n    if(this.props !== prevProps) {      \r\n        if(this.props.gt===104002){                        \r\n            if(this.props.teamStat.team_id === this.props.ati){\r\n                this.setState({                    \r\n                    apitw : this.props.teamStat.p_win,                    \r\n                    aloss : this.props.teamStat.p_lose,                    \r\n                    adraw : this.props.teamStat.h_d,                    \r\n                    apitSv : this.props.teamStat.p_save,                           \r\n                    apitEra : Math.round(this.props.teamStat.p_era * 100) / 100\r\n                })\r\n            }else{\r\n                this.setState({                    \r\n                    hpitw : this.props.teamStat.p_win,                    \r\n                    hloss : this.props.teamStat.p_lose,                    \r\n                    hdraw : this.props.teamStat.h_d,                    \r\n                    hpitSv : this.props.teamStat.p_save,                           \r\n                    hpitEra : Math.round(this.props.teamStat.p_era * 100) / 100\r\n                })\r\n            }                        \r\n        }else{\r\n            \r\n            //console.log(this.props);\r\n\r\n            // if(this.props.teamStat.team_id === this.props.ati){\r\n            //     this.setState({                                         \r\n            //         apitw : this.props.teamStat.pitW,                     \r\n            //         aloss : this.props.teamStat.loss,                     \r\n            //         adraw : this.props.teamStat.draw,                     \r\n            //         apitSv : this.props.teamStat.pitSv,                     \r\n            //         apitEra : this.props.teamStat.pitEra \r\n            //     })\r\n            // }else{\r\n            //     this.setState({                    \r\n            //         hpitw : this.props.teamStat.pitW,                     \r\n            //         hloss : this.props.teamStat.loss,                     \r\n            //         hdraw : this.props.teamStat.draw,                     \r\n            //         hpitSv : this.props.teamStat.pitSv,                     \r\n            //         hpitEra : this.props.teamStat.pitEra \r\n            //     })\r\n            // }   \r\n        }                \r\n    }\r\n  } \r\n  render() {        \r\n    const {gametype, homeabbr, awayabbr, hometeam, awayteam, hpn, apn, hps, aps, hpe, ape, hpitw, apitw, hloss, aloss, hdraw, adraw, hpitSv, apitSv, hpitEra, apitEra} = this.state;        \r\n    //console.log(this.props);\r\n    return(                        \r\n        <div className=\"select-team-box\">\r\n            <p className=\"tit\">Select Pitching Team</p>\r\n            <p className=\"icon-exc\" data-event='click focus' data-tip=\"The selected team can earn additional winning points in victory.\"></p>                        \r\n            <ReactTooltip globalEventOff='click' place=\"bottom\" type=\"dark\" effect=\"solid\"/>\r\n            {gametype===104002 && (//mlb\r\n            <div className=\"select-team-btn\">\r\n                <div className={this.state.tabSubActive === 0 ? \"selectTeam awayTeam active\" : \"selectTeam awayTeam\"} onClick={() => this.selectTeam(0, 'away',this.state)}>\r\n                    <em className={\"t-logo logo-MLB-\"+awayabbr}></em>\r\n                    <span data-id=\"\">{awayabbr}</span>\r\n                </div>\r\n                <div className={this.state.tabSubActive === 1 ? \"selectTeam homeTeam active\" : \"selectTeam homeTeam\"} onClick={() => this.selectTeam(1, 'home', this.state)}>\r\n                    <span data-id=\"\">{homeabbr}</span>\r\n                    <em className={\"t-logo logo-MLB-\"+homeabbr}></em>\r\n                </div>\r\n            </div>\r\n            )}\r\n            {gametype===104012 && (//kbo\r\n            <div className=\"select-team-btn\">                \r\n                <div className={this.state.tabSubActive === 0 ? \"selectTeam awayTeam active\" : \"selectTeam awayTeam\"} onClick={() => this.selectTeam(0, 'away', this.state)}>\r\n                    <em className={\"t-logo logo-KBO-\"+awayabbr}></em>\r\n                    <span data-id=\"\">{awayteam}</span>\r\n                </div>\r\n                <div className={this.state.tabSubActive === 1 ? \"selectTeam homeTeam active\" : \"selectTeam homeTeam\"} onClick={() => this.selectTeam(1, 'home', this.state)}>\r\n                    <span data-id=\"\">{hometeam}</span>\r\n                    <em className={\"t-logo logo-KBO-\"+homeabbr}></em>\r\n                </div>\t\t\r\n            </div>\r\n            )}            \r\n            <div className=\"select-team-infor\">\r\n                <div className=\"first\">\t\t\t\t\t\t\r\n                    <div className=\"sr-txt\">\r\n                        <span><strong>W</strong></span>\r\n                        <span>{apitw}</span>\r\n                        <span><strong>L</strong></span>\r\n                        <span>{aloss}</span>\r\n                        <span><strong>D</strong></span>\r\n                        <span>{adraw}</span>\r\n                        <span><strong>S</strong></span>\r\n                        <span>{apitSv}</span>\r\n                        <span><strong>ERA</strong></span>\r\n                        <span>{apitEra}</span>\r\n                    </div>\r\n                    <div id=\"away-sp-txt\" className=\"sp-txt\" >\r\n                        <span><strong>SP</strong></span>\r\n                        <span id=\"spName\">{apn}</span>\r\n                        <span id=\"spStat\">({aps}, {ape})</span>\r\n                    </div>\r\n                </div>\r\n                <div className=\"middle\">\r\n                    <span>AWAY</span>\r\n                    <span>HOME</span>\r\n                </div>\t\t\t\t\r\n                <div className=\"second\">\t\t\t\t\t\r\n                    <div className=\"sr-txt\">\r\n                        <span><strong>W</strong></span>\r\n                        <span>{hpitw}</span>\r\n                        <span><strong>L</strong></span>\r\n                        <span>{hloss}</span>\r\n                        <span><strong>D</strong></span>\r\n                        <span>{hdraw}</span>\r\n                        <span><strong>S</strong></span>\r\n                        <span>{hpitSv}</span>\r\n                        <span><strong>ERA</strong></span>\r\n                        <span>{hpitEra}</span>\r\n                    </div>\r\n                    <div id=\"home-sp-txt\" className=\"sp-txt\">\r\n                        <span><strong>SP</strong></span>                        \r\n                        <span id=\"spName\">{hpn}</span>\r\n                        <span id=\"spStat\">({hps}, {hpe})</span>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n            <p className=\"txt\">Winning and QS points are given to the selected pitching team according to the results of the competition.</p>\r\n        </div>                                       \r\n    )\r\n  }\r\n};\r\nexport default SelectTeam;","import React from 'react';\n\nconst SelectTeamTab = (props) => {\n  const {\n    items, // 장르 데이터\n    textProperty, // 장르 name\n    valueProperty, // 장르 _id\n    selectedItem, // 선택한 장르\n    onItemSelect, // 장르 선택 이벤트 처리기\n    tabColor\n  } = props;\n  \n  //console.log(tabColor);\n  return (       \n    <div className=\"select-team\">       \n        {items.map((item ,index )=>        \n        <div          \n          key={item[valueProperty]} // item[valueProperty]는 item._id와 동일          \n          index={index}\n          onClick={() => onItemSelect(item, index)}\n          className={tabColor === index ? \"team active\" : \"team\"}\n        >          \n          {item[textProperty]}           \n        </div>)}       \n    </div>      \n  );\n}\n\n// Default Props: Props 값이 지정되지 않았을 때 설정할 기본값\nSelectTeamTab.defaultProps = {\n  textProperty: \"name\",\n  valueProperty: \"_id\"\n}\n\nexport default SelectTeamTab;","import React from 'react';\nimport PropTypes from 'prop-types';\nimport _ from 'lodash';\n\nconst Pagination = (props) => {\n  const { itemsCount, pageSize, currentPage, onPageChange } = props;\n  const pageCount = Math.ceil(itemsCount / pageSize);\n\n  if (pageCount === 1) return null; // 1페이지 뿐이라면 페이지 수를 보여줄 필요가 없음\n\n  const pages = _.range(1, pageCount + 1); // lodash의 range() 함수: 1부터 pageCount+1 까지 1씩 증가하는 배열 생성\n\n  return (\n    <nav>\n      <ul className=\"pagination\">\n        {pages.map(page => (\n          <li key={page} className={page === currentPage ? \"page-item active\" : \"page-item\"}> {/* Bootstrap을 사용하여 현재 페이지를 시각적으로 표시 */}\n            <a className=\"page-link\" onClick={() => onPageChange(page)}>{page}</a> {/* 페이지 번호 클릭 이벤트 처리 함수 지정 */}\n          </li>\n        ))}\n      </ul>\n    </nav>\n  );\n}\n\n// PropTypes를 사용한 타입 체크\nPagination.propTypes = {\n  itemsCount: PropTypes.number.isRequired,\n  pageSize: PropTypes.number.isRequired,\n  currentPage: PropTypes.number.isRequired,\n  onPageChange: PropTypes.func.isRequired\n}\n\nexport default Pagination;","import React, { Component } from 'react';\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome'\nimport { faCaretUp, faCaretDown } from '@fortawesome/free-solid-svg-icons'\n// columns: array\n// sortColumn: object\n// onSort: function\n\nexport default class TableHeader extends Component {\n  // 부모 컴포넌트에 정렬 이벤트 발생을 알리는 함수\n  // 부모 컴포넌트에서 정렬을 시도하면 되긴 하지만 역정렬은 안 됨\n  raiseSort = path => {\n    const sortColumn = { ...this.props.sortColumn };\n   \n    if (sortColumn.path === path) // 정렬할 컬럼명이 기존과 같다면 역정렬\n      sortColumn.order = (sortColumn.order === \"asc\") ? \"desc\" : \"asc\";\n    else { // 정렬할 컬럼명이 기존과 다르면 역정렬하지 않음\n      sortColumn.path = path;\n      sortColumn.order = \"asc\";\n    }\n\n    this.props.onSort(sortColumn);\n  };\n\n  // column 클릭 시 오름차순 및 내림차순 아이콘을 표시하는 태그 반환\n  // 이 아이콘에 대해선 https://fontawesome.com/v4.7.0/icon/sort-asc 참고\n  renderSortIcon = (column) => {\n    const { sortColumn } = this.props;\n\n    if (column.path !== sortColumn.path) return null;\n\n     //if (sortColumn.order === 'asc') return <i className=\"fa fa-sort-asc\" />\n    if (sortColumn.order === 'asc') return  <em><FontAwesomeIcon icon={faCaretDown} /></em>    \n    return <em><FontAwesomeIcon icon={faCaretUp} /></em>    \n  }\n\n  render() {\n    return (\n      <div className=\"tb-tit\">      \n          {this.props.columns.map(column => (\n            <span\n              key={column.path || column.key} // column.path 값을 지정하되 그렇지 않으면 column.key 값을 지정\n              className={column.class}\n              onClick={() => this.raiseSort(column.path)}\n            >\n             {column.label} {this.renderSortIcon(column)}\n            </span>\n          ))}        \n      </div>\n    );\n  }\n}","import React, { Component } from 'react';\nimport ScrollArea from 'react-scrollbar';\nimport _ from 'lodash';\n\nexport default class TableBody extends Component {\n  // column에 content 값이 있다면 content 값에 정의된 화살표 코드에 item(movie) 객체를 대입\n  renderCell = (item, column) => {\n    if (column.content) {\n      return column.content(item);\n    }\n\n    // column에 content 값이 없다면 item(movie) 객체에서 column에 대응하는 값을 꺼내옴\n    return _.get(item, column.path); // lodash의 get(obejct, path) 함수: object의 path에서 값을 꺼내옴\n  }\n\n  // map() 함수 사용 시 Unique keys를 지정하기 위한 함수\n  createKey = (item, column) => {\n    return item._id + (column.path || column.key); // column엔 path 및 key 속성이 모두 정의된 객체는 없으므로 둘 중 하나로부터 값을 가져옴\n  }\n  selectPlayer(item){   \n    this.props.onChange(item);\n  }\n\n  render() {\n    const { data, columns } = this.props;\n    //console.log(this.props);\n    return (\n      <ul className=\"tb-txt\">\n        <ScrollArea className=\"playlist\" smoothScrolling={true} horizontal={false}>\n        {/* 행: 모든 영화 정보(data) 중 하나의 영화 정보(item)씩 꺼내며 그려 나감 */}\n        {data.map(item => (\n          item.po === \"P\" ? null :(\n            <li key={item.id} onClick={() => this.selectPlayer(item)}>\n            {/* 열: 하나의 영화 정보(item)에서 각 컬럼명(column)에 대응하는 값을 꺼내옴 */} \n            {columns.map(column =>\n              <span className={column.class} key={this.createKey(item, column)}>{this.renderCell(item, column)}</span>\n            )}\n            </li>\n          )                    \n        ))}\n        </ScrollArea>\n      </ul>\n    );\n  }\n}","import React, { Component } from 'react';\nimport MlbTableHeader from './MlbtableHeader';\nimport MlbTableBody from './MlbtableBody';\n\n\n\nexport default class Table extends Component {\n// 향후 코드 재사용성을 높이기 위해 Table 컴포넌트를 분리\n//const Table = ({ columns, sortColumn, onSort, data }) => {\n\ngetSelectPlayer = (item) =>{          \n  this.props.onChange(item);\n}; \nrender() { \n  const {columns, sortColumn, onSort, data} = this.props;\n  return (\n    <div className=\"select-player\">\n      <MlbTableHeader        \n        columns={columns}\n        sortColumn={sortColumn}\n        onSort={onSort}\n      />\n      <MlbTableBody        \n        data={data}\n        columns={columns}\n        onChange={this.getSelectPlayer}\n      />\n    </div>\n   );\n  }\n}\n//export default Table;\n\n// const Table = (props) => {\n//   const { columns, sortColumn, onSort, data } = props;\n//   return ( ... );\n// }\n\n// 위아래 코드는 둘 다 동일. 아래 쪽이 Destructuring Arguments.\n\n// const Table = ({ columns, sortColumn, onSort, data }) => {\n//   return ( ... );\n// }","import React from 'react';\n\nconst Like = (props) => {\n  let classes = \"fa fa-heart\" // 속이 꽉 찬 하트\n  if (!props.liked) classes += \"-o\"; // 속이 빈 하트\n\n  return (\n    <i\n      onClick={props.onClick}\n      style={{ cursor: \"pointer\" }}\n      className={classes}\n      aria-hidden=\"true\"\n    ></i>);\n}\n\nexport default Like;","import React, { Component } from 'react';\nimport Mlbtable from './Mlbtable';\nimport Like from '../components/common/like';\n\n// 역정렬 이벤트를 부모 컴포넌트에게 알리기 위해 클래스형 컴포넌트로 구현\n// (함수형 컴포넌트로 구현한 후 부모 컴포넌트에서 역정렬을 시도하면 DOM에 반영되지 않음)\nexport default class PlayerTable extends Component {\n  columns = [\n    // 일반 컬럼: \n    { key:'nu',path: 'nu', label: 'No', class:'no' },\n    { key:'po', path: 'po', label: 'Pos', class:'pos' },\n    { key:'starters', path: 'starters', label: 'Starters', class:'starters' },\n    { key:'nm',  path: 'nm', label: 'Name', class:'name',  \n      content: movie => <p><em liked={movie.nm} onClick={() => this.props.onLike(movie)}></em>{movie.nm}</p> \n    },\n    { path: 'fa', label: 'FPPG', class:'fppg' },\n    { key:'pir', path: 'pir', label: 'Pick %', class:'pick',\n      content: movie => <p>{Math.round(movie.pir * 100) / 100}</p>\n    },    \n    // Like 및 Delete는 Like 컴포넌트와 Button 태그를 보여주기 위해 content라는 속성에 JavaScript ES6 코드를 정의\n    // {\n    //   key: 'like',\n    //   content: movie => <Like liked={movie.liked} onClick={() => this.props.onLike(movie)} />\n    // },\n    {\n      key: 'select',\n      //content: movie => <button onClick={() => this.props.onDelete(movie)} className=\"btn btn-danger btn-sm\">Delete</button>\n      content: movie => \n      <button onClick={() => this.props.onDelete(movie)} className=\"btn-plus-minus\" type=\"button\">\n        <span className=\"icon-wrapper\">\n          <span className=\"icon-bar\"></span>\n          <span className=\"icon-bar\"></span>\t\t\t\t\t\t\t\t\t\t\t\t\t\n        </span>                        \n      </button>\t\n    },\n  ]\n\n  selectPlayerData = (item) =>{\n    //console.log(item);\n    this.props.onChange(item);\n  }\n\n  render() {\n    const { movies, onSort, sortColumn } = this.props;\n\n    return (\n      <Mlbtable\n        columns={this.columns}\n        data={movies}\n        sortColumn={sortColumn}\n        onSort={onSort}\n        onChange={this.selectPlayerData}\n      />\n      \n    );\n  }\n}","import React, { Component } from 'react';\r\nimport SelectTeamTab from './SelectTeamTab';\r\nimport Pagination from '../components/common/pagination';\r\n//import { paginate } from '../../common/utils';\r\nimport PlayerTable from './PlayerTable';\r\nimport _ from 'lodash';\r\n\r\nexport default class SelectPlayer extends Component {\r\n  state = {\r\n    gameid: this.props.gi,\r\n    gametype: this.props.gt,\r\n    homeabbr: this.props.hta,\r\n    awayabbr: this.props.ata,\r\n    hometeam: this.props.htn,\r\n    awayteam: this.props.atn,\r\n    \r\n    tabColor: 0,\r\n    \r\n    movies: [],\r\n    genres: [],\r\n    currentPage: 1, // 현재 페이지 위치\r\n    pageSize: 100, // 한 페이지에 보여줄 콘텐츠 개수\r\n    sortColumn: { path: 'title', order: 'asc' }\r\n  }  \r\n  componentDidMount() {\r\n    //const genres = [{ _id: \"\", name: 'All Genres' }, ...getGenres()];     \r\n    if(this.props.gt ===104002){\r\n        var away = this.props.ata\r\n        var home = this.props.hta\r\n    }else{\r\n        var away = this.props.atn\r\n        var home = this.props.htn\r\n    }        \r\n    const genres = [\r\n        { _id: this.props.ati, name: away},\r\n        { _id: this.props.hti, name: home},\r\n      ]\r\n    \r\n     \r\n    // 장르 정보에 모든 장르 추가, All Genres에 _id 값을 주지 않으면 ListGroup 컴포넌트에서 map() 함수 사용 시 key 속성을 지정할 수 없게 되어 경고 발생.\r\n    //this.setState({ movies: getMovies(), genres });    \r\n    //console.log(this.props.pl);\r\n    this.setState({ movies: this.props.pl, genres });    \r\n    \r\n  }\r\n\r\n  handleDelete = (movie) => {\r\n    //const movies = this.state.movies.filter(m => m.id !== movie.id);\r\n    //this.setState({ movies: movies });\r\n    // this.setState({ movies }); // 위 코드와 동일. Modern JavaScript에서 키 값과 value가 서로 같으면 이렇게 표현 가능.\r\n  }\r\n\r\n  handleLike = (movie) => {\r\n    const movies = [...this.state.movies];\r\n    const index = movies.indexOf(movie);\r\n    movies[index] = { ...movies[index] }; // 없어도 작동하는데 왜...?\r\n    movies[index].liked = !movies[index].liked;\r\n    console.log(movies[index].liked);\r\n    this.setState({ movies });\r\n  }\r\n\r\n  handlePageChange = (page) => {\r\n    this.setState({ currentPage: page });\r\n  }\r\n\r\n  handleGenreSelect = (genre, index) => { \r\n    this.setState({ selectedGenre: genre, tabColor:index, currentPage: 1 }); // 장르가 바뀔 때마다 1페이지로 초기화해야 2페이지 이상 내용이 없는 장르가 제대로 표시됨\r\n  }\r\n\r\n  handleSort = (sortColumn) => {\r\n    //console.log(sortColumn);\r\n    this.setState({ sortColumn });\r\n  }\r\n  // 이 컴포넌트에서 사용하는 가공 데이터를 반환\r\n  getPagedData = () => {\r\n    const {\r\n      //pageSize,\r\n      //currentPage,\r\n      sortColumn,\r\n      selectedGenre,\r\n      movies: allMovies\r\n    } = this.state;\r\n\r\n    //console.log(allMovies);\r\n    // 선택된 장르와 일치하는 영화 데이터를 얻어옴\r\n    // 1. selectedGenre와 그 _id 값이 모두 존재하는 장르는 All Genres를 제외한 장르이므로 ? 조건으로 진입\r\n    // 2. All Genres는 _id값이 없으므로(값: \"\") ! 조건으로 진입    \r\n      \r\n    const filtered = selectedGenre && selectedGenre._id\r\n      ? allMovies.filter(m => m.ti === selectedGenre._id)\r\n      : allMovies.filter(m => m.ti === this.props.ati);                \r\n    \r\n    // orderBy() 함수: 정렬된 배열 반환    \r\n    const sorted = _.orderBy(filtered, [sortColumn.path], [sortColumn.order]);\r\n    \r\n    if(sortColumn.path===\"nu\"){\r\n      if(sortColumn.order===\"desc\"){\r\n        const result = sorted.slice().sort((a,b) => b.nu.localeCompare(a.nu, undefined, {numeric: true}));    \r\n        return { totalCount: filtered.length, data: result };        \r\n      }else{\r\n        const result = sorted.slice().sort((a,b) => a.nu.localeCompare(b.nu, undefined, {numeric: true}));    \r\n        return { totalCount: filtered.length, data: result };        \r\n      }            \r\n    }else{\r\n      return { totalCount: filtered.length, data: sorted };        \r\n    }            \r\n    // allMovies 대신 filtered 전달\r\n    //const movies = paginate(sorted, currentPage, pageSize);\r\n    //console.log(filtered.length);    \r\n  }\r\n  selectPlayerData = (item) =>{\r\n    console.log(item);\r\n  }\r\n\r\n  render() {\r\n    const { length: count } = this.state.movies;\r\n    const { pageSize, currentPage, sortColumn } = this.state;\r\n    \r\n    if (count === 0) return <p>There are no movies in the database.</p>    \r\n    const { totalCount, data: movies } = this.getPagedData(); // State에 따라 필터링된 영화 정보를 얻어옴\r\n    \r\n    return (\r\n      /* className이 row(행) 및 col(열)인 div 배치: Bootstrap Grid System */\r\n      <div className=\"select-content\">\r\n            <p className=\"select-tit\">Select Batters</p>          \r\n            <SelectTeamTab\r\n                items={this.state.genres}\r\n                selectedItem={this.state.selectedGenre}\r\n                tabColor={this.state.tabColor}\r\n                onItemSelect={this.handleGenreSelect}\r\n            />\r\n            <p className=\"select-txt\">At least one player from both teams must be selected.</p>            \r\n            <PlayerTable\r\n                movies={movies}\r\n                sortColumn={sortColumn}\r\n                onLike={this.handleLike}\r\n                onDelete={this.handleDelete}\r\n                onSort={this.handleSort}\r\n                onChange={this.selectPlayerData}\r\n            />\r\n            <Pagination\r\n              itemsCount={totalCount}\r\n              pageSize={pageSize}\r\n              currentPage={currentPage} // 현재 페이지\r\n              onPageChange={this.handlePageChange}\r\n            />            \r\n      </div>            \r\n    )\r\n  }\r\n}\r\n","import React from 'react';\n\nconst ListGroup = (props) => {\n  const {\n    items, // 장르 데이터\n    textProperty, // 장르 name\n    valueProperty, // 장르 _id\n    selectedItem, // 선택한 장르\n    onItemSelect // 장르 선택 이벤트 처리기\n  } = props;\n\n  return (\n    /* Bootstrap List Group */\n    \n    <div className=\"select-team\">\n        {items.map(item =>\n        <div\n          key={item[valueProperty]} // item[valueProperty]는 item._id와 동일\n          onClick={() => onItemSelect(item)}\n          className={item === selectedItem ? \"team active\" : \"team\"}\n        >\n          {item[textProperty]} {/* item[textProperty]는 item.name과 동일 */}\n        </div>)}\n        {/* <div className=\"team first-team active\">\n            <span id=\"firstImg\" className=\"\">{awayteam}<em>(0)</em></span>                                    \n        </div>\t\t\t\n        <div className=\"team second-team\">                 \n            <span id=\"secondImg\" className=\"\">{hometeam}<em>(0)</em></span>\n        </div> */}\n    </div>     \n    // <ul className=\"list-group\">\n    //   {/* 장르 리스트 생성 */}\n    //   {items.map(item =>\n    //     <li\n    //       key={item[valueProperty]} // item[valueProperty]는 item._id와 동일\n    //       onClick={() => onItemSelect(item)}\n    //       className={item === selectedItem ? \"list-group-item active\" : \"list-group-item\"}\n    //     >\n    //       {item[textProperty]} {/* item[textProperty]는 item.name과 동일 */}\n    //     </li>)}\n    // </ul>\n  );\n}\n\n// Default Props: Props 값이 지정되지 않았을 때 설정할 기본값\nListGroup.defaultProps = {\n  textProperty: \"name\",\n  valueProperty: \"_id\"\n}\n\nexport default ListGroup;","const movies = [\n  {\n    id: \"5B91E18D48190A9B45867AA9634B5C66\",\n    title: \"기생충\",\n    genre: { _id: \"8826D329FF117EB2559BE04D3DFE330F\", name: \"블랙 코미디\" },\n    release: \"2019-05-30\",\n    liked: true\n  },\n  {\n    id: \"6526C7787216CB1AF215AC7D1AAA313F\",\n    title: \"라이온 킹\",\n    genre: { _id: \"DD0F413993B0AFD5C8493BCD27E73C21\", name: \"애니메이션\" },\n    release: \"2019-07-17\"\n  },\n  {\n    id: \"777B51C04E767A8F8B1A60816F35B4D8\",\n    title: \"날씨의 아이\",\n    genre: { _id: \"DD0F413993B0AFD5C8493BCD27E73C21\", name: \"애니메이션\" },\n    release: \"2019-10-31\"\n  },\n  {\n    id: \"DC23B4878476C4E0745C1CC9399E2C61\",\n    title: \"알라딘\",\n    genre: { _id: \"DD63CD95D6DA4B7D098BD64249B23F43\", name: \"판타지\" },\n    release: \"2019-05-23\"\n  },\n  {\n    id: \"C7492C5CFC82BE87E37B59F14016EAAC\",\n    title: \"나랏말싸미\",\n    genre: { _id: \"3DA98E33E11A2F37662578A0E8710935\", name: \"역사\" },\n    release: \"2019-07-24\"\n  },\n  {\n    id: \"8185799F94A0F218DAFB3F2E9564E64E\",\n    title: \"주전장\",\n    genre: { _id: \"3DA98E33E11A2F37662578A0E8710935\", name: \"역사\" },\n    release: \"2019-07-25\"\n  },\n  {\n    id: \"2345E509E8BA2E3170AD4E48F11A3898\",\n    title: \"어벤져스: 엔드게임\",\n    genre: { _id: \"DD63CD95D6DA4B7D098BD64249B23F43\", name: \"판타지\" },\n    release: \"2019-04-24\"\n  },\n  {\n    id: \"DCA73F75B0F7D0EF28619496B07DC5DD\",\n    title: \"봉오동 전투\",\n    genre: { _id: \"3DA98E33E11A2F37662578A0E8710935\", name: \"역사\" },\n    release: \"2019-08-07\"\n  },\n  {\n    id: \"0529E582348EF19BA7CEEB942DF39A2E\",\n    title: \"김복동\",\n    genre: { _id: \"3DA98E33E11A2F37662578A0E8710935\", name: \"역사\" },\n    release: \"2019-08-08\"\n  },\n  {\n    id: \"DEB622A90089E684FC25D2FA9CDA7CD8\",\n    title: \"코코\",\n    genre: { _id: \"DD0F413993B0AFD5C8493BCD27E73C21\", name: \"애니메이션\" },\n    release: \"2018-01-11\"\n  },\n  {\n    id: \"F9B50D384A576F0EC8836C05723A0A6D\",\n    title: \"너의 이름은\",\n    genre: { _id: \"DD0F413993B0AFD5C8493BCD27E73C21\", name: \"애니메이션\" },\n    release: \"2017-01-04\"\n  },\n]\n\nexport function getMovies() {\n  return movies;\n}","const genres = [\n  { _id: \"8826D329FF117EB2559BE04D3DFE330F\", name: \"블랙 코미디\" },\n  { _id: \"DD0F413993B0AFD5C8493BCD27E73C21\", name: \"애니메이션\" },\n  { _id: \"DD63CD95D6DA4B7D098BD64249B23F43\", name: \"판타지\" },\n  { _id: \"3DA98E33E11A2F37662578A0E8710935\", name: \"역사\" },\n]\n\nexport function getGenres() {\n  return genres.filter(g => g);\n}","import React, { Component } from 'react';\n\n// columns: array\n// sortColumn: object\n// onSort: function\n\nexport default class TableHeader extends Component {\n  // 부모 컴포넌트에 정렬 이벤트 발생을 알리는 함수\n  // 부모 컴포넌트에서 정렬을 시도하면 되긴 하지만 역정렬은 안 됨\n  raiseSort = path => {\n    const sortColumn = { ...this.props.sortColumn };\n\n    if (sortColumn.path === path) // 정렬할 컬럼명이 기존과 같다면 역정렬\n      sortColumn.order = (sortColumn.order === \"asc\") ? \"desc\" : \"asc\";\n    else { // 정렬할 컬럼명이 기존과 다르면 역정렬하지 않음\n      sortColumn.path = path;\n      sortColumn.order = \"asc\";\n    }\n\n    this.props.onSort(sortColumn);\n  };\n\n  // column 클릭 시 오름차순 및 내림차순 아이콘을 표시하는 태그 반환\n  // 이 아이콘에 대해선 https://fontawesome.com/v4.7.0/icon/sort-asc 참고\n  renderSortIcon = (column) => {\n    const { sortColumn } = this.props;\n\n    if (column.path !== sortColumn.path) return null;\n\n    if (sortColumn.order === 'asc') return <i className=\"fa fa-sort-asc\" />\n    return <i className=\"fa fa-sort-desc\" />\n  }\n\n  render() {\n    return (\n      <thead>\n        <tr>\n          {this.props.columns.map(column => (\n            <th\n              key={column.path || column.key} // column.path 값을 지정하되 그렇지 않으면 column.key 값을 지정\n              onClick={() => this.raiseSort(column.path)}\n            >\n              {column.label} {this.renderSortIcon(column)}\n            </th>\n          ))}\n        </tr>\n      </thead>\n    );\n  }\n}","import React, { Component } from 'react';\nimport _ from 'lodash';\n\nexport default class TableBody extends Component {\n  // column에 content 값이 있다면 content 값에 정의된 화살표 코드에 item(movie) 객체를 대입\n  renderCell = (item, column) => {\n    if (column.content) {\n      return column.content(item);\n    }\n\n    // column에 content 값이 없다면 item(movie) 객체에서 column에 대응하는 값을 꺼내옴\n    return _.get(item, column.path); // lodash의 get(obejct, path) 함수: object의 path에서 값을 꺼내옴\n  }\n\n  // map() 함수 사용 시 Unique keys를 지정하기 위한 함수\n  createKey = (item, column) => {\n    return item._id + (column.path || column.key); // column엔 path 및 key 속성이 모두 정의된 객체는 없으므로 둘 중 하나로부터 값을 가져옴\n  }\n\n  render() {\n    const { data, columns } = this.props;\n\n    return (\n      <tbody>\n        {/* 행: 모든 영화 정보(data) 중 하나의 영화 정보(item)씩 꺼내며 그려 나감 */}\n        {data.map(item => (\n          <tr key={item._id}>\n            {/* 열: 하나의 영화 정보(item)에서 각 컬럼명(column)에 대응하는 값을 꺼내옴 */}\n            {columns.map(column =>\n              <td key={this.createKey(item, column)}>{this.renderCell(item, column)}</td>)}\n          </tr>\n        ))}\n      </tbody>\n    );\n  }\n}","import React from 'react';\nimport TableHeader from './tableHeader';\nimport TableBody from './tableBody';\n\n// 향후 코드 재사용성을 높이기 위해 Table 컴포넌트를 분리\nconst Table = ({ columns, sortColumn, onSort, data }) => {\n  return (\n    <table className=\"table\">\n      <TableHeader\n        columns={columns}\n        sortColumn={sortColumn}\n        onSort={onSort}\n      />\n      <TableBody\n        data={data}\n        columns={columns}\n      />\n    </table>\n  );\n}\n\nexport default Table;\n\n// const Table = (props) => {\n//   const { columns, sortColumn, onSort, data } = props;\n//   return ( ... );\n// }\n\n// 위아래 코드는 둘 다 동일. 아래 쪽이 Destructuring Arguments.\n\n// const Table = ({ columns, sortColumn, onSort, data }) => {\n//   return ( ... );\n// }","import React, { Component } from 'react';\nimport Table from './common/table';\nimport Like from './common/like';\n\n// 역정렬 이벤트를 부모 컴포넌트에게 알리기 위해 클래스형 컴포넌트로 구현\n// (함수형 컴포넌트로 구현한 후 부모 컴포넌트에서 역정렬을 시도하면 DOM에 반영되지 않음)\nexport default class MoviesTable extends Component {\n  columns = [\n    // 일반 컬럼: \n    { path: 'title', label: 'Title' },\n    { path: 'genre.name', label: 'Genre' },\n    { path: 'release', label: 'Release' },\n\n    // Like 및 Delete는 Like 컴포넌트와 Button 태그를 보여주기 위해 content라는 속성에 JavaScript ES6 코드를 정의\n    {\n      key: 'like',\n      content: movie => <Like liked={movie.liked} onClick={() => this.props.onLike(movie)} />\n    },\n    {\n      key: 'delete',\n      content: movie => <button onClick={() => this.props.onDelete(movie)} className=\"btn btn-danger btn-sm\">Delete</button>\n    },\n  ]\n\n  render() {\n    const { movies, onSort, sortColumn } = this.props;\n\n    return (\n      <Table\n        columns={this.columns}\n        data={movies}\n        sortColumn={sortColumn}\n        onSort={onSort}\n      />\n    );\n  }\n}","import React from \"react\";\r\nimport axios from \"axios\";\r\nimport ScrollArea from 'react-scrollbar';\r\nimport * as utils from '../../common/utils';\r\nimport SelectTeam from \"./SelectTeam\";\r\nimport SelectPlayer from \"./SelectPlayer\";\r\nimport Movies from '././../components/movies';\r\nclass Condition extends React.Component {\r\n  state = {          \r\n    playerlist : [],                 \r\n    gameid: this.props.settinginfo.gi,\r\n    gametype: this.props.settinginfo.gt,\r\n    homeabbr: this.props.settinginfo.hta,\r\n    awayabbr: this.props.settinginfo.ata,\r\n    hometeam: this.props.settinginfo.htn,\r\n    awayteam: this.props.settinginfo.atn,\r\n    hti: this.props.settinginfo.hti,\r\n    ati: this.props.settinginfo.ati,    \r\n  };\r\n  getTeamStat= async (gametype, gameid) =>{    \r\n    const {data : {result: teamStat }} = await axios.get(utils.DATA_URL+`/stat/team/${gametype}/${gameid}`);    \r\n    this.year = new Date().getFullYear();\r\n    const nowYear = String(this.year);    \r\n      {Object.keys(teamStat).map((key ,index) => {        \r\n        if(key ===\"stat\"){                   \r\n          {teamStat[key].map((statlist, index) => {                \r\n            if(statlist.season_year=== nowYear){\r\n              if(statlist.opponent_team_id == \"ALL\"){                                  \r\n                this.setState({                    \r\n                  teamStat: statlist, \r\n                  //selectTeam : state                  \r\n                });                                \r\n              }                \r\n            }                         \r\n          })}                      \r\n        }                \r\n      })}                  \r\n  };  \r\n  componentDidMount(){\r\n    this.getTeamStat(this.props.settinginfo.gt, this.props.settinginfo.gi);       \r\n  };\r\n  selectTeam = (homeAway, state) => {\r\n    //console.log(state);        \r\n    this.props.onChange(homeAway, state);    \r\n  }   \r\n  render() {        \r\n    const {playerlist, gameid, gametype, homeabbr, awayabbr, hometeam, awayteam, selectTeam} = this.state;    \r\n    //console.log(playerlist);\r\n\r\n    return(    \r\n        <div className=\"condition-content\">         \r\n            <SelectTeam {...this.props.settinginfo} teamStat={this.state.teamStat} onChange={this.selectTeam} />             \r\n            <SelectPlayer {...this.props.settinginfo} />\r\n\r\n            <ul className=\"txt-box\">\r\n              <li>A 10% commission will be collected from your Entry Fee by RankingBall.</li>\r\n              <li>User-created Contests will be refunded and converted to Free Contest unless three or more players enter.(TOURNAMENT, Head-to-Head)</li>\r\n              <li>User-created Contests cannot be canceled(and refunded) by the user.</li>\r\n              <li>Submitted Entries can be modified in the ‘Upcoming’ tab up to 5 minutes before the real game starts.</li>             \r\n            </ul>                           \r\n        </div>\r\n    )\r\n  }\r\n};\r\nexport default Condition;","import React, { Component } from 'react';\nimport ListGroup from './common/listGroup';\nimport Pagination from './common/pagination';\nimport { getMovies } from '../services/movieService';\nimport { getGenres } from '../services/genreService';\nimport { paginate } from '../../common/utils';\nimport MoviesTable from './moviesTable';\nimport _ from 'lodash';\n\nexport default class Movies extends Component {\n  state = {\n    movies: [],\n    genres: [],\n    currentPage: 1, // 현재 페이지 위치\n    pageSize: 100, // 한 페이지에 보여줄 콘텐츠 개수\n    sortColumn: { path: 'title', order: 'asc' }\n  }\n\n  componentDidMount() {\n    const genres = [{ _id: \"\", name: 'All Genres' }, ...getGenres()]; // 장르 정보에 모든 장르 추가, All Genres에 _id 값을 주지 않으면 ListGroup 컴포넌트에서 map() 함수 사용 시 key 속성을 지정할 수 없게 되어 경고 발생.\n    this.setState({ movies: getMovies(), genres });\n  }\n\n  handleDelete = (movie) => {\n    const movies = this.state.movies.filter(m => m.id !== movie.id);\n    this.setState({ movies: movies });\n    // this.setState({ movies }); // 위 코드와 동일. Modern JavaScript에서 키 값과 value가 서로 같으면 이렇게 표현 가능.\n  }\n\n  handleLike = (movie) => {\n    const movies = [...this.state.movies];\n    const index = movies.indexOf(movie);\n    movies[index] = { ...movies[index] }; // 없어도 작동하는데 왜...?\n    movies[index].liked = !movies[index].liked;\n    console.log(movies[index].liked);\n    this.setState({ movies });\n  }\n\n  handlePageChange = (page) => {\n    this.setState({ currentPage: page });\n  }\n\n  handleGenreSelect = (genre) => {\n    this.setState({ selectedGenre: genre, currentPage: 1 }); // 장르가 바뀔 때마다 1페이지로 초기화해야 2페이지 이상 내용이 없는 장르가 제대로 표시됨\n  }\n\n  handleSort = (sortColumn) => {\n    this.setState({ sortColumn });\n  }\n\n  // 이 컴포넌트에서 사용하는 가공 데이터를 반환\n  getPagedData = () => {\n    const {\n      pageSize,\n      currentPage,\n      sortColumn,\n      selectedGenre,\n      movies: allMovies\n    } = this.state;\n\n    // 선택된 장르와 일치하는 영화 데이터를 얻어옴\n    // 1. selectedGenre와 그 _id 값이 모두 존재하는 장르는 All Genres를 제외한 장르이므로 ? 조건으로 진입\n    // 2. All Genres는 _id값이 없으므로(값: \"\") ! 조건으로 진입\n    const filtered = selectedGenre && selectedGenre._id\n      ? allMovies.filter(m => m.genre._id === selectedGenre._id)\n      : allMovies;\n\n    // orderBy() 함수: 정렬된 배열 반환\n    const sorted = _.orderBy(filtered, [sortColumn.path], [sortColumn.order]);\n\n    // allMovies 대신 filtered 전달\n    //const movies = paginate(sorted, currentPage, pageSize);\n\n    return { totalCount: filtered.length, data: sorted };\n  }\n\n  render() {\n    const { length: count } = this.state.movies;\n    const { pageSize, currentPage, sortColumn } = this.state;\n\n    if (count === 0) return <p>There are no movies in the database.</p>\n\n    const { totalCount, data: movies } = this.getPagedData(); // State에 따라 필터링된 영화 정보를 얻어옴\n\n    return (\n      /* className이 row(행) 및 col(열)인 div 배치: Bootstrap Grid System */\n      <div className=\"row\">\n        <div className=\"col-3\">\n          <ListGroup\n            items={this.state.genres}\n            selectedItem={this.state.selectedGenre}\n            onItemSelect={this.handleGenreSelect}\n          />\n        </div>\n\n        <div className=\"col\">\n          <p>Showing {totalCount} movies in the database.</p>\n          <MoviesTable\n            movies={movies}\n            sortColumn={sortColumn}\n            onLike={this.handleLike}\n            onDelete={this.handleDelete}\n            onSort={this.handleSort}\n          />\n          <Pagination\n            itemsCount={totalCount}\n            pageSize={pageSize}\n            currentPage={currentPage} // 현재 페이지\n            onPageChange={this.handlePageChange}\n          />\n        </div>\n      </div>\n    )\n  }\n}","import React from \"react\";\r\nimport axios from \"axios\";\r\nimport * as utils from '../common/utils';\r\nimport { Draggable, Droppable } from 'react-drag-and-drop'\r\n//import * as utils from '../common/utils';\r\nclass Grid extends React.Component {\r\n  state = {     \r\n    gametype : this.props.gameType,\r\n    contestId : this.props.contestId,\r\n    celllist : []\r\n  };\r\n  getCellList = async (gametype, contestId) =>{             \r\n    const {data : {result: celllist }} = await axios.get(utils.DATA_URL+`cell?gameType=${gametype}&contestId=${contestId}`);\r\n    this.setState({      \r\n      celllist,\r\n      isLoading :false\r\n    });\r\n  };  \r\n  onDrop(data) {\r\n    console.log(data)\r\n    // => banana \r\n  }\r\n  selectCell(id){           \r\n    this.setState({cellActive: id});      \r\n  };\r\n  componentDidMount() {    \r\n    this.getCellList(this.state.gametype, this.state.contestId)\r\n  }\r\n  render() {        \r\n    const {celllist, homeaway} = this.state;              \r\n    console.log(this.props);\r\n    return(    \r\n        <div className=\"grid-content\">\r\n            <ul className=\"txt-box\">\r\n              <li>Drag your mouse to change each cell’s position.</li>\r\n              <li>After arranging all the players, click ‘Submit’ to participate in the Contest.</li>\r\n            </ul>\r\n            <div className=\"grid-page\">\r\n              <span className=\"active\">1</span><span className=\"btn-add\">+</span>\r\n              <button className=\"btn btn-del\" type=\"button\">\r\n                <span className=\"icon-wrapper\">\r\n                  <span className=\"icon-bar\"></span>\r\n                  <span className=\"icon-bar\"></span>\t\t\t\t\t\t\t\t\t\t\t\t\t\r\n                </span>\t\t\t\t\t\t\t\t\t\t\r\n              </button>\r\n            </div>\r\n            <div className=\"grid-infor\">              \r\n              <p>Field No. <span id=\"gridCount\">1/1</span></p>\t\r\n              <p>Total Entry Fee <span id=\"entryFee\">0</span></p>              \r\n            </div>\r\n\r\n            <div className=\"cell-content\">\r\n              <div  className=\"cell-box\">\r\n              {celllist.map((cell, index) => {                                \r\n                return (            \r\n                    <div key={index}>\r\n                      {index === 4 ? (\r\n                        <div  className={this.props.selectTeam === undefined ? \"cell team\" : \"cell team active\" || this.props.homeAway === \"home\" ? \"cell team \"+this.props.homeAway+\" active\" : \"cell team \"+this.props.homeAway+\" active\" } onClick={() => this.selectCell(cell.co)}>\r\n                          {this.props.selectTeam===undefined ? (\r\n                            <div><p className=\"player-name\">Select Team</p></div>\r\n                          ):(\r\n                            <div>\r\n                              <p className=\"player-name\">Pitcher</p>                   \r\n                              <div className=\"player-photo\">\r\n                                <span className=\"tm\">{this.props.homeAway === \"home\" ? this.props.selectTeam.homeabbr : this.props.selectTeam.awayabbr }</span>\r\n                                <span className={this.props.homeAway === \"home\" ? \"t-logo logo-KBO-\"+this.props.selectTeam.homeabbr : \"t-logo logo-KBO-\"+this.props.selectTeam.awayabbr}></span>\r\n                              </div>                                             \r\n                            </div>\r\n                          )}                          \r\n                        </div>\r\n                      ):(\r\n                        <div key={index} className={this.state.cellActive === cell.co ? \"cell ing\" : \"cell\"} onClick={() => this.selectCell(cell.co)}>\r\n                          <p className=\"player-name\">\r\n                            Select Player\r\n                          </p>                   \r\n                          <div className=\"player-photo\">\r\n                            <span className=\"tm\"></span>\r\n                            <span className=\"num\"></span>\r\n                            <span className=\"pos\"></span>\r\n                          </div>\r\n                          <button className=\"btn btn-add-del\" type=\"button\">\r\n                            <span className=\"icon-wrapper\">\r\n                              <span className=\"icon-bar\"></span>\r\n                              <span className=\"icon-bar\"></span>\r\n                            </span>\r\n                          </button>                 \r\n                        </div>\r\n                      )}\r\n                    </div>                               \r\n                  )\r\n              })}\r\n              </div>                                           \r\n            </div>\r\n\r\n        </div>\r\n    )\r\n  }\r\n};\r\nexport default Grid;","import React from \"react\";\r\nimport axios from \"axios\";\r\nimport * as utils from '../common/utils';\r\nimport Lodding from \"../common/Lodding\";\r\nimport Top from \"../common/Top\";\r\nimport Footer from \"../common/Footer\";\r\nimport SubTitle from \"../common/SubTitle\";\r\nimport SettingTop from \"./SettingTop\";\r\nimport MlbCondition from \"./mlb/Condition\";\r\nimport Grid from \"./Grid\";\r\n\r\nclass Setting extends React.Component {  \r\n  state = {                   \r\n    isLoading: true,    \r\n    subTitle : \"Setup\",     \r\n    contestId : this.props.match.params.id,\r\n    item :[]\r\n  };  \r\n  getContestInfor = async (gametype, gameid) =>{             \r\n    const {data : {result: settinginfo }} = await axios.get(utils.DATA_URL+`/game/${gametype}/${gameid}`);                                     \r\n    this.setState({      \r\n      settinginfo,\r\n      isLoading :false      \r\n    });           \r\n  };\r\n  componentWillMount(){    \r\n    const setTopData = this.props.location.props;\r\n    if(setTopData ===undefined){      \r\n      this.setState({\r\n        setTopData:  JSON.parse(localStorage.setTopData)\r\n      })\r\n    }else{\r\n      this.setState({\r\n        setTopData: setTopData\r\n      })\r\n      localStorage.setTopData = JSON.stringify(setTopData);  \r\n    }           \r\n  } \r\n  \r\n  componentDidMount(){\r\n    this.getContestInfor(localStorage.getItem('gametype'), this.state.setTopData.gi);        \r\n  };\r\n  selectTeam = (homeAway, state) => {        \r\n    this.setState({\r\n      homeAway: homeAway,\r\n      selectTeam: state\r\n    })   \r\n  }         \r\n  render() {            \r\n    const {isLoading, subTitle, settinginfo, contestId} = this.state;              \r\n    var local_gametype = localStorage.getItem('gametype');  \r\n    \r\n    return (\r\n        <div className=\"container\">\r\n            <Top />\r\n            {isLoading ? (\r\n                <Lodding />\r\n            ) : (\r\n                [\r\n                    <SubTitle key={1} gameType={local_gametype} subTitle={subTitle} />,                    \r\n                    <SettingTop key={2} prop={this.state.setTopData} gameType={local_gametype} />,\r\n                    <div key={3} className={\"create-content \"+utils.getAbbr(Number(local_gametype))}>                        \r\n                        <MlbCondition gameType={local_gametype} settinginfo={settinginfo} onChange={this.selectTeam} />\r\n                        <Grid gameType={local_gametype} contestId={contestId} settinginfo={settinginfo} selectTeam={this.state.selectTeam} homeAway={this.state.homeAway}/>\r\n                    </div>,                    \r\n                    <div key={4} className=\"btn-box-setting\">\r\n                        <button className=\"rb-btn btn-back\">Back</button>\r\n                        <button className=\"rb-btn home-logo\">go game list</button>\r\n                    </div>                   \r\n                ]\r\n            )}\r\n            <Footer />\r\n        </div>\r\n    )\r\n  }\r\n};\r\nexport default Setting;","import React from 'react';\nimport {HashRouter, Route} from \"react-router-dom\";\nimport Login from './js/login/Login';\nimport Main from './js/Main';\n//import Contest from './js/contest/Contest';\nimport Setting from './js/setting/Setting';\nimport './css/layout.css';\nimport \"./css/team.css\";\n\nclass Layout extends React.Component {\n  render() {\n    return (      \n      <HashRouter>        \n          <Route path=\"/\" exact={true} component={Main} />\n          <Route path=\"/login\" component={Login} />          \n          <Route path=\"/set/:id\" component={Setting} />\n      </HashRouter>      \n    );\n  };\n};\nexport default Layout;\n","import 'react-app-polyfill/ie11';\nimport 'react-app-polyfill/stable';\nimport React from 'react';\nimport ReactDOM from 'react-dom';\nimport { I18nextProvider } from \"react-i18next\";\nimport i18next from \"i18next\";\nimport common_en from \"./js/translations/en/common.json\";\nimport common_ko from \"./js/translations/ko/common.json\";\nimport Layout from './Layout';\nimport './css/default.css';\ni18next.init({\n    interpolation: { escapeValue: false },  // React already does escaping\n    lng: 'en',                              // language to use\n    resources: {\n        en: {\n            common: common_en               // 'common' is our custom namespace\n        },\n        ko: {\n            common: common_ko\n        },\n    },\n});\n\nReactDOM.render(<I18nextProvider i18n={i18next}><Layout /></I18nextProvider>,document.getElementById('wrap'));\n\n"],"sourceRoot":""}